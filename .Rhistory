MA_data <- subset(data, ALTER >= 18 & ALTER <= 75 & ATTENTION_CHECK == 1)
MA_data$AGE_GROUP <- NA
MA_data$AGE_GROUP <- factor(
MA_data$AGE_GROUP,
levels = c(1,2),
labels = c("18-29", "30-75")
)
MA_data$AGE_GROUP[which(MA_data$ALTER >= 18 & MA_data$ALTER <=29 )] <- "18-29"
MA_data$AGE_GROUP[which(MA_data$ALTER >= 30 & MA_data$ALTER <= 75 )] <- "30-75"
summary(MA_data$ALTER)
table(MA_data$ALTER<30, MA_data$ALTER>=30)
summary(MA_data$AGE_GROUP)
agegroupwave <- c(
"1" = "18-29",
"2" = "30-75"
)
MA_data$GENDER_GROUP <- NA
MA_data$GENDER_GROUP <- factor(
MA_data$GENDER_GROUP,
levels = c(1,2,3,4),
labels = c("Weiblich","Männlich","Divers","Keine Angabe")
)
MA_data$GENDER_GROUP[which(MA_data$GESCHLECHT == 1)] <- "Weiblich"
MA_data$GENDER_GROUP[which(MA_data$GESCHLECHT == 2)] <- "Männlich"
MA_data$GENDER_GROUP[which(MA_data$GESCHLECHT == 3)] <- "Divers"
MA_data$GENDER_GROUP[which(MA_data$GESCHLECHT == 4)] <- "Keine Angabe"
summary(MA_data$GENDER_GROUP)
#data$GESCHLECHT <- factor(
#data$GESCHLECHT,
#levels = c(1,2,3,4),
#labels = c("Weiblich", "Männlich","Divers","Keine Angabe")
#)
MA_data$EDUCATION_GROUP <- NA
MA_data$EDUCATION_GROUP <- factor(
MA_data$EDUCATION_GROUP,
levels = c(1,2,3,4,5,6,7),
labels = c("Hauptschulabschluss","Mittlere Reife","Fachhochschulreife","Allgemeine Hochschulreife","Bachelor","Master","Andere")
)
MA_data$EDUCATION_GROUP[which(MA_data$BILDUNG == 1)] <- "Hauptschulabschluss"
MA_data$EDUCATION_GROUP[which(MA_data$BILDUNG == 2)] <- "Mittlere Reife"
MA_data$EDUCATION_GROUP[which(MA_data$BILDUNG == 3)] <- "Fachhochschulreife"
MA_data$EDUCATION_GROUP[which(MA_data$BILDUNG == 4)] <- "Allgemeine Hochschulreife"
MA_data$EDUCATION_GROUP[which(MA_data$BILDUNG == 5)] <- "Bachelor"
MA_data$EDUCATION_GROUP[which(MA_data$BILDUNG == 6)] <- "Master"
MA_data$EDUCATION_GROUP[which(MA_data$BILDUNG == 7)] <- "Andere"
summary(MA_data$EDUCATION_GROUP)
MA_data$COUNTRY_GROUP <- NA
MA_data$COUNTRY_GROUP <- factor(
MA_data$COUNTRY_GROUP,
levels = c(1,2,3,4),
labels = c("Deutschland","Österreich","Schweiz","Andere")
)
MA_data$COUNTRY_GROUP[which(MA_data$LAND == 1)] <- "Deutschland"
MA_data$COUNTRY_GROUP[which(MA_data$LAND == 2)] <- "Österreich"
MA_data$COUNTRY_GROUP[which(MA_data$LAND == 3)] <- "Schweiz"
MA_data$COUNTRY_GROUP[which(MA_data$LAND == 4)] <- "Andere"
summary(MA_data$COUNTRY_GROUP)
MA_data$BDB_GROUP <- NA
MA_data$BDB_GROUP <- factor(
MA_data$BDB_GROUP,
levels = c(1,2,3),
labels = c("Ja","Nein","Keine Angabe")
)
MA_data$BDB_GROUP[which(MA_data$BLUTSPENDEVERHALTEN == 1)] <- "Ja"
MA_data$BDB_GROUP[which(MA_data$BLUTSPENDEVERHALTEN == 2)] <- "Nein"
MA_data$BDB_GROUP[which(MA_data$BLUTSPENDEVERHALTEN == 3)] <- "Keine Angabe"
#table(MA_data$BDB_GROUP)
MA_data$BDO_GROUP <- NA
MA_data$BDO_GROUP <- factor(
MA_data$BDO_GROUP,
levels = c(1,3,4),
labels = c("Deutsches Rotes Kreuz","Weiß ich nicht","Andere")
)
MA_data$BDO_GROUP[which(MA_data$BLUTSPENDEORGANISATION == 1)] <- "Deutsches Rotes Kreuz"
MA_data$BDO_GROUP[which(MA_data$BLUTSPENDEORGANISATION == 3)] <- "Weiß ich nicht"
MA_data$BDO_GROUP[which(MA_data$BLUTSPENDEORGANISATION == 4)] <- "Andere"
#table(MA_data$BDO_GROUP)
MA_data$Condition <- factor(MA_data$c_0001, levels = c(1,2,3))
labels = c("Individueller Anreiz", "Sozialer Anreiz", "Kontrollgruppe")
#table(MA_data$Condition)
MA_data <- apply_labels(MA_data,
AGE_GROUP = "Age group",
GENDER_GROUP = "Gender",
EDUCATION_GROUP = "Level of education",
COUNTRY_GROUP = "Residence country")
html_code <- MA_data %>%
tab_cells(AGE_GROUP,GENDER_GROUP,EDUCATION_GROUP) %>%
tab_cols(total(label = "Sum"),Condition) %>%
tab_stat_cases(total_label = "All") %>%
tab_pivot() %>%
htmlTable(align = "c",css.cell = c("width: 400px"))
#this code must be adapted according to the personal file path
#file_path <- "C:\\Users\\timri\\Desktop\\Uni Vorlesungen\\Master GeKo\\Masterarbeit\\Statistiken und Auswertung\\Auswertung"
#file_name <- "Deskriptiv.html"
#writeLines(html_code, file.path("C:\\Users\\timri\\Desktop\\Uni Vorlesungen\\Master GeKo\\Masterarbeit\\Statistiken und Auswertung\\Auswertung", "Deskriptiv.html"))
MA_data_tabele <- MA_data
label(MA_data_tabele$GENDER_GROUP)       <- "Geschlecht"
label(MA_data_tabele$ALTER)       <- "Alter"
label(MA_data_tabele$EDUCATION_GROUP)     <- "Bildung"
label(MA_data_tabele$COUNTRY_GROUP) <- "Land"
label(MA_data_tabele$BDB_GROUP) <- "Blutspendeverhalten"
label(MA_data_tabele$BDO_GROUP) <- "Blutspendeorganisation"
units(MA_data_tabele$ALTER)       <- "Jahre"
caption  <- "Deskriptive Daten"
#footnote <- "ᵃ Also known as Breslow thickness"
table1(~ GENDER_GROUP + ALTER + EDUCATION_GROUP + COUNTRY_GROUP + BDB_GROUP + BDO_GROUP | Condition, data=MA_data_tabele, overall=c(left="Total"), caption=caption) #footnote=footnote)
N <- nrow(MA_data)
ageRange_min <- min(MA_data$ALTER)
ageRange_max <- max(MA_data$ALTER)
ageMean <- mean(MA_data$ALTER)
ageSD <- sd(MA_data$ALTER)
ageMedian <- median(MA_data$ALTER)
round(table(MA_data$GESCHLECHT)/N*100,2)
round(table(MA_data$BILDUNG)/N*100,2)
describeBy(MA_data$ALTER,MA_data$Condition)
#AMOTIVATION
MA_data$AMOTIVATION_SUM <- (MA_data$AMOTIVATION_1 + MA_data$AMOTIVATION_2 + MA_data$AMOTIVATION_3) / 3
psych::alpha(subset(MA_data, select = c(AMOTIVATION_1,AMOTIVATION_2,AMOTIVATION_3)))
#Crombachs α : 0.53
#EXTERNAL_REGULATION
MA_data$EXTERNAL_REGULATION_SUM <- (MA_data$EXTERNAL_REGULATION_1 + MA_data$EXTERNAL_REGULATION_2 + MA_data$EXTERNAL_REGULATION_3) / 3
psych::alpha(subset(MA_data, select = c(EXTERNAL_REGULATION_1,EXTERNAL_REGULATION_2,EXTERNAL_REGULATION_2)))
#Crombachs α : 0.85
#INTROJECTED_REGULATION
MA_data$INTROJECTED_REGULATION_SUM <- (MA_data$INTROJECTED_REGULATION_1 + MA_data$INTROJECTED_REGULATION_2 + MA_data$INTROJECTED_REGULATION_3) / 3
psych::alpha(subset(MA_data, select = c(INTROJECTED_REGULATION_1,INTROJECTED_REGULATION_2,INTROJECTED_REGULATION_3)))
#Crombachs α : 0.80
#IDENTIFIED_REGUALTION
MA_data$IDENTIFIED_REGUALTION_SUM <- (MA_data$IDENTIFIED_REGUALTION_1 + MA_data$IDENTIFIED_REGUALTION_2 + MA_data$IDENTIFIED_REGUALTION_3) / 3
psych::alpha(subset(MA_data, select = c(IDENTIFIED_REGUALTION_1,IDENTIFIED_REGUALTION_2,IDENTIFIED_REGUALTION_3)))
#Crombachs α : 0.52
#INTEGRATED_REGULATION
MA_data$INTEGRATED_REGULATION_SUM <- (MA_data$INTEGRATED_REGULATION_1 + MA_data$INTEGRATED_REGULATION_2 + MA_data$INTEGRATED_REGULATION_3) / 3
psych::alpha(subset(MA_data, select = c(INTEGRATED_REGULATION_1,INTEGRATED_REGULATION_2,INTEGRATED_REGULATION_3)))
#Crombachs α : 0.81
#INTRINSIC_REGUALTION
MA_data$INTRINSIC_REGUALTION_SUM <- (MA_data$INTRINSIC_REGUALTION_1 + MA_data$INTRINSIC_REGUALTION_2 + MA_data$INTRINSIC_REGUALTION_3) / 3
psych::alpha(subset(MA_data, select = c(INTRINSIC_REGUALTION_1,INTRINSIC_REGUALTION_2,INTRINSIC_REGUALTION_3)))
#Crombachs α : 0.77
MA_data$INTENTION_SUM <- (MA_data$INTENTION_1 + MA_data$INTENTION_2 + MA_data$INTENTION_3) / 3
psych::alpha(subset(MA_data, select = c(INTENTION_1,INTENTION_2,INTENTION_3)))
#Crombachs α : 0.98
#Requirement 1: Metric scaling of the AV : Yes
#Requirement 2: Homogeneity of variances
leveneTest(INTENTION_SUM ~ Condition*AGE_GROUP, data = MA_data)
#The variances are not equal, as p < 0.05. Violation of the homogeneity assumption.
ANOVA_BENEFIT <- aov(INTENTION_SUM ~ Condition + AGE_GROUP + Condition*AGE_GROUP, data = MA_data)
ANOVA_BENEFIT_ONE_WAY <- oneway.test(INTENTION_SUM ~ Condition + AGE_GROUP + Condition*AGE_GROUP, data = MA_data, var.equal = FALSE)
print(ANOVA_BENEFIT_ONE_WAY)
plot(ANOVA_BENEFIT, 2)
#Requirement 3: Assumption of a normal distribution can only be partially accepted
#H0 : normal distribution if p > 0.05
Young <- subset(MA_data, MA_data$AGE_GROUP == "18-29")
Old <- subset(MA_data, MA_data$AGE_GROUP == "30-75")
#AMOTIVATION
par(mfrow=c(1,2))
shapiro.test(Young$AMOTIVATION_SUM)
hist(scale(Young$AMOTIVATION_SUM))
shapiro.test(Old$AMOTIVATION_SUM)
hist(scale(Old$AMOTIVATION_SUM))
#EXTERNAL_REGULATION
par(mfrow=c(1,2))
shapiro.test(Young$EXTERNAL_REGULATION_SUM)
hist(scale(Young$EXTERNAL_REGULATION_SUM))
shapiro.test(Old$EXTERNAL_REGULATION_SUM)
hist(scale(Old$EXTERNAL_REGULATION_SUM))
#INTROJECTED_REGULATION
par(mfrow=c(1,2))
shapiro.test(Young$INTROJECTED_REGULATION_SUM)
hist(scale(Young$INTROJECTED_REGULATION_SUM))
shapiro.test(Old$INTROJECTED_REGULATION_SUM)
hist(scale(Old$INTROJECTED_REGULATION_SUM))
#IDENTIFIED_REGUALTION
par(mfrow=c(1,2))
shapiro.test(Young$IDENTIFIED_REGUALTION_SUM)
hist(scale(Young$IDENTIFIED_REGUALTION_SUM))
shapiro.test(Old$IDENTIFIED_REGUALTION_SUM)
hist(scale(Old$IDENTIFIED_REGUALTION_SUM))
#INTEGRATED_REGULATION
par(mfrow=c(1,2))
shapiro.test(Young$INTEGRATED_REGULATION_SUM)
hist(scale(Young$INTEGRATED_REGULATION_SUM))
shapiro.test(Old$INTEGRATED_REGULATION_SUM)
hist(scale(Old$INTEGRATED_REGULATION_SUM))
#INTRINSIC_REGUALTION
par(mfrow=c(1,2))
shapiro.test(Young$INTRINSIC_REGUALTION_SUM)
hist(scale(Young$INTRINSIC_REGUALTION_SUM))
shapiro.test(Old$INTRINSIC_REGUALTION_SUM)
hist(scale(Old$INTRINSIC_REGUALTION_SUM))
#equality of variances
LeveneTest(MA_data$AMOTIVATION_SUM, MA_data$Condition)
LeveneTest(MA_data$EXTERNAL_REGULATION_SUM, MA_data$AGE_GROUP)
LeveneTest(MA_data$INTROJECTED_REGULATION_SUM, MA_data$AGE_GROUP)
LeveneTest(MA_data$IDENTIFIED_REGUALTION_SUM, MA_data$AGE_GROUP)
LeveneTest(MA_data$INTEGRATED_REGULATION_SUM, MA_data$AGE_GROUP)
LeveneTest(MA_data$INTRINSIC_REGUALTION_SUM, MA_data$AGE_GROUP)
#equal variance is given
#Since there is no homogeneity of variance, the standard errors must be calculated "robustly". This function ensures that the ANOVA is less susceptible to unequal variances
summary(ANOVA_BENEFIT, robust = TRUE)
Anova(ANOVA_BENEFIT, type=3)
table(MA_data$Condition)
table(MA_data$c_0001)
table(data$c_0001)
summary(data$c_0001)
boxplot(INTENTION_SUM ~ AGE_GROUP, data=MA_data)
boxplot(INTENTION_SUM ~ AGE_GROUP, col = "#FFA500", data=MA_data)
boxplot(INTENTION_SUM ~ AGE_GROUP, col = c("blue", "green"), data=MA_data)
describeBy(MA_data$AMOTIVATION_SUM, MA_data$AGE_GROUP)
describeBy(MA_data$EXTERNAL_REGULATION_SUM, MA_data$AGE_GROUP)
describeBy(MA_data$INTROJECTED_REGULATION_SUM, MA_data$AGE_GROUP)
describeBy(MA_data$IDENTIFIED_REGUALTION_SUM, MA_data$AGE_GROUP)
describeBy(MA_data$INTEGRATED_REGULATION_SUM, MA_data$AGE_GROUP)
describeBy(MA_data$INTRINSIC_REGUALTION_SUM, MA_data$AGE_GROUP)
boxplot(MA_data$AMOTIVATION_SUM, MA_data$AGE_GROUP)
boxplot(MA_data$EXTERNAL_REGULATION_SUM, MA_data$AGE_GROUP)
boxplot(MA_data$INTROJECTED_REGULATION_SUM, MA_data$AGE_GROUP)
boxplot(MA_data$IDENTIFIED_REGUALTION_SUM, MA_data$AGE_GROUP)
boxplot(MA_data$INTEGRATED_REGULATION_SUM, MA_data$AGE_GROUP)
boxplot(MA_data$INTRINSIC_REGUALTION_SUM, MA_data$AGE_GROUP)
tabele(MA_data$INTRINSIC_REGUALTION_SUM, MA_data$AGE_GROUP)
table(MA_data$INTRINSIC_REGUALTION_SUM, MA_data$AGE_GROUP)
boxplot(MA_data$AMOTIVATION_SUM, MA_data$AGE_GROUP)
boxplot(MA_data$INTRINSIC_REGUALTION_SUM, MA_data$AGE_GROUP)
boxplot(MA_data$AMOTIVATION_SUM ~ MA_data$AGE_GROUP)
boxplot(MA_data$EXTERNAL_REGULATION_SUM ~ MA_data$AGE_GROUP)
boxplot(MA_data$INTROJECTED_REGULATION_SUM ~ MA_data$AGE_GROUP)
boxplot(MA_data$IDENTIFIED_REGUALTION_SUM ~ MA_data$AGE_GROUP)
boxplot(MA_data$INTEGRATED_REGULATION_SUM ~ MA_data$AGE_GROUP)
boxplot(MA_data$INTRINSIC_REGUALTION_SUM ~ MA_data$AGE_GROUP)
coin::wilcox_test(MA_data$AMOTIVATION_SUM ~ MA_data$AGE_GROUP, data = data, alternative = "greater", distribution = "exact", correct = FALSE, conf.int = TRUE)
coin::wilcox_test(MA_data$EXTERNAL_REGULATION_SUM ~ MA_data$AGE_GROUP, data = data, alternative = "greater", distribution = "exact", correct = FALSE, conf.int = TRUE)
coin::wilcox_test(MA_data$INTROJECTED_REGULATION_SUM ~ MA_data$AGE_GROUP, data = data, alternative = "greater", distribution = "exact", correct = FALSE, conf.int = TRUE)
coin::wilcox_test(MA_data$INTROJECTED_REGULATION_SUM ~ MA_data$AGE_GROUP, data = data, alternative = "smaller", distribution = "exact", correct = FALSE, conf.int = TRUE)
coin::wilcox_test(MA_data$INTROJECTED_REGULATION_SUM ~ MA_data$AGE_GROUP, data = data, alternative = "less", distribution = "exact", correct = FALSE, conf.int = TRUE)
coin::wilcox_test(MA_data$IDENTIFIED_REGUALTION_SUM ~ MA_data$AGE_GROUP, data = data, alternative = "less", distribution = "exact", correct = FALSE, conf.int = TRUE)
coin::wilcox_test(MA_data$INTEGRATED_REGULATION_SUM ~ MA_data$AGE_GROUP, data = data, alternative = "less", distribution = "exact", correct = FALSE, conf.int = TRUE)
coin::wilcox_test(MA_data$INTRINSIC_REGUALTION_SUM ~ MA_data$AGE_GROUP, data = data, alternative = "less", distribution = "exact", correct = FALSE, conf.int = TRUE)
T_Test_AMOTIVATION <- coin::wilcox_test(MA_data$AMOTIVATION_SUM ~ MA_data$AGE_GROUP, data = data, alternative = "greater", distribution = "exact", correct = FALSE, conf.int = TRUE)
T_Test_EXTERNAL_REGULATION <- coin::wilcox_test(MA_data$EXTERNAL_REGULATION_SUM ~ MA_data$AGE_GROUP, data = data, alternative = "greater", distribution = "exact", correct = FALSE, conf.int = TRUE)
T_Test_INTROJECTED_REGULATION <- coin::wilcox_test(MA_data$INTROJECTED_REGULATION_SUM ~ MA_data$AGE_GROUP, data = data, alternative = "less", distribution = "exact", correct = FALSE, conf.int = TRUE)
T_Test_IDENTIFIED_REGUALTION <- coin::wilcox_test(MA_data$IDENTIFIED_REGUALTION_SUM ~ MA_data$AGE_GROUP, data = data, alternative = "less", distribution = "exact", correct = FALSE, conf.int = TRUE)
T_Test_INTEGRATED_REGULATIO <- coin::wilcox_test(MA_data$INTEGRATED_REGULATION_SUM ~ MA_data$AGE_GROUP, data = data, alternative = "less", distribution = "exact", correct = FALSE, conf.int = TRUE)
T_Test_INTRINSIC_REGUALTION <- coin::wilcox_test(MA_data$INTRINSIC_REGUALTION_SUM ~ MA_data$AGE_GROUP, data = data, alternative = "less", distribution = "exact", correct = FALSE, conf.int = TRUE)
T_Test_AMOTIVATION %>% wilcox_effsize(len ~ 1, mu = 0)
T_Test_AMOTIVATION %>% coin::wilcox_effsize(len ~ 1, mu = 0)
coin::wilcox_effsize(T_Test_AMOTIVATION)
wilcox_effsize(T_Test_AMOTIVATION)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
#plot(pressure)
#load packages
library(psych)
library(expss)
library(plyr)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(reshape2)
library(tidyr)
library(Hmisc)
library(sjPlot)
library(table1)
library(DescTools)
library(moments)
library(corrplot)
library(QuantPsyc)
library(coin)
library(corrr)
library(knitr)
library(kableExtra)
library(tidyverse)
library(apaTables)
library(sandwich)
library(carData)
library(car)
library(Rmisc)
library(boot)
data  <- read.csv("data_project_1013280_2024_04_17.csv", sep = ";")
#describe(data)
#table(data$ALTER)
#table(data$ATTENTION_CHECK)
#table(data$ALTER, data$ATTENTION_CHECK != 1)
MA_data <- subset(data, ALTER >= 18 & ALTER <= 75 & ATTENTION_CHECK == 1)
MA_data$AGE_GROUP <- NA
MA_data$AGE_GROUP <- factor(
MA_data$AGE_GROUP,
levels = c(1,2),
labels = c("18-29", "30-75")
)
MA_data$AGE_GROUP[which(MA_data$ALTER >= 18 & MA_data$ALTER <=29 )] <- "18-29"
MA_data$AGE_GROUP[which(MA_data$ALTER >= 30 & MA_data$ALTER <= 75 )] <- "30-75"
summary(MA_data$ALTER)
table(MA_data$ALTER<30, MA_data$ALTER>=30)
summary(MA_data$AGE_GROUP)
agegroupwave <- c(
"1" = "18-29",
"2" = "30-75"
)
MA_data$GENDER_GROUP <- NA
MA_data$GENDER_GROUP <- factor(
MA_data$GENDER_GROUP,
levels = c(1,2,3,4),
labels = c("Weiblich","Männlich","Divers","Keine Angabe")
)
MA_data$GENDER_GROUP[which(MA_data$GESCHLECHT == 1)] <- "Weiblich"
MA_data$GENDER_GROUP[which(MA_data$GESCHLECHT == 2)] <- "Männlich"
MA_data$GENDER_GROUP[which(MA_data$GESCHLECHT == 3)] <- "Divers"
MA_data$GENDER_GROUP[which(MA_data$GESCHLECHT == 4)] <- "Keine Angabe"
summary(MA_data$GENDER_GROUP)
#data$GESCHLECHT <- factor(
#data$GESCHLECHT,
#levels = c(1,2,3,4),
#labels = c("Weiblich", "Männlich","Divers","Keine Angabe")
#)
MA_data$EDUCATION_GROUP <- NA
MA_data$EDUCATION_GROUP <- factor(
MA_data$EDUCATION_GROUP,
levels = c(1,2,3,4,5,6,7),
labels = c("Hauptschulabschluss","Mittlere Reife","Fachhochschulreife","Allgemeine Hochschulreife","Bachelor","Master","Andere")
)
MA_data$EDUCATION_GROUP[which(MA_data$BILDUNG == 1)] <- "Hauptschulabschluss"
MA_data$EDUCATION_GROUP[which(MA_data$BILDUNG == 2)] <- "Mittlere Reife"
MA_data$EDUCATION_GROUP[which(MA_data$BILDUNG == 3)] <- "Fachhochschulreife"
MA_data$EDUCATION_GROUP[which(MA_data$BILDUNG == 4)] <- "Allgemeine Hochschulreife"
MA_data$EDUCATION_GROUP[which(MA_data$BILDUNG == 5)] <- "Bachelor"
MA_data$EDUCATION_GROUP[which(MA_data$BILDUNG == 6)] <- "Master"
MA_data$EDUCATION_GROUP[which(MA_data$BILDUNG == 7)] <- "Andere"
summary(MA_data$EDUCATION_GROUP)
MA_data$COUNTRY_GROUP <- NA
MA_data$COUNTRY_GROUP <- factor(
MA_data$COUNTRY_GROUP,
levels = c(1,2,3,4),
labels = c("Deutschland","Österreich","Schweiz","Andere")
)
MA_data$COUNTRY_GROUP[which(MA_data$LAND == 1)] <- "Deutschland"
MA_data$COUNTRY_GROUP[which(MA_data$LAND == 2)] <- "Österreich"
MA_data$COUNTRY_GROUP[which(MA_data$LAND == 3)] <- "Schweiz"
MA_data$COUNTRY_GROUP[which(MA_data$LAND == 4)] <- "Andere"
summary(MA_data$COUNTRY_GROUP)
MA_data$BDB_GROUP <- NA
MA_data$BDB_GROUP <- factor(
MA_data$BDB_GROUP,
levels = c(1,2,3),
labels = c("Ja","Nein","Keine Angabe")
)
MA_data$BDB_GROUP[which(MA_data$BLUTSPENDEVERHALTEN == 1)] <- "Ja"
MA_data$BDB_GROUP[which(MA_data$BLUTSPENDEVERHALTEN == 2)] <- "Nein"
MA_data$BDB_GROUP[which(MA_data$BLUTSPENDEVERHALTEN == 3)] <- "Keine Angabe"
#table(MA_data$BDB_GROUP)
MA_data$BDO_GROUP <- NA
MA_data$BDO_GROUP <- factor(
MA_data$BDO_GROUP,
levels = c(1,3,4),
labels = c("Deutsches Rotes Kreuz","Weiß ich nicht","Andere")
)
MA_data$BDO_GROUP[which(MA_data$BLUTSPENDEORGANISATION == 1)] <- "Deutsches Rotes Kreuz"
MA_data$BDO_GROUP[which(MA_data$BLUTSPENDEORGANISATION == 3)] <- "Weiß ich nicht"
MA_data$BDO_GROUP[which(MA_data$BLUTSPENDEORGANISATION == 4)] <- "Andere"
#table(MA_data$BDO_GROUP)
MA_data$Condition <- factor(MA_data$c_0001, levels = c(1,2,3))
labels = c("Individueller Anreiz", "Sozialer Anreiz", "Kontrollgruppe")
#table(MA_data$Condition)
#summary(data$c_0001)
MA_data <- apply_labels(MA_data,
AGE_GROUP = "Age group",
GENDER_GROUP = "Gender",
EDUCATION_GROUP = "Level of education",
COUNTRY_GROUP = "Residence country")
html_code <- MA_data %>%
tab_cells(AGE_GROUP,GENDER_GROUP,EDUCATION_GROUP) %>%
tab_cols(total(label = "Sum"),Condition) %>%
tab_stat_cases(total_label = "All") %>%
tab_pivot() %>%
htmlTable(align = "c",css.cell = c("width: 400px"))
#this code must be adapted according to the personal file path
#file_path <- "C:\\Users\\timri\\Desktop\\Uni Vorlesungen\\Master GeKo\\Masterarbeit\\Statistiken und Auswertung\\Auswertung"
#file_name <- "Deskriptiv.html"
#writeLines(html_code, file.path("C:\\Users\\timri\\Desktop\\Uni Vorlesungen\\Master GeKo\\Masterarbeit\\Statistiken und Auswertung\\Auswertung", "Deskriptiv.html"))
MA_data_tabele <- MA_data
label(MA_data_tabele$GENDER_GROUP)       <- "Geschlecht"
label(MA_data_tabele$ALTER)       <- "Alter"
label(MA_data_tabele$EDUCATION_GROUP)     <- "Bildung"
label(MA_data_tabele$COUNTRY_GROUP) <- "Land"
label(MA_data_tabele$BDB_GROUP) <- "Blutspendeverhalten"
label(MA_data_tabele$BDO_GROUP) <- "Blutspendeorganisation"
units(MA_data_tabele$ALTER)       <- "Jahre"
caption  <- "Deskriptive Daten"
#footnote <- "ᵃ Also known as Breslow thickness"
table1(~ GENDER_GROUP + ALTER + EDUCATION_GROUP + COUNTRY_GROUP + BDB_GROUP + BDO_GROUP | Condition, data=MA_data_tabele, overall=c(left="Total"), caption=caption) #footnote=footnote)
N <- nrow(MA_data)
ageRange_min <- min(MA_data$ALTER)
ageRange_max <- max(MA_data$ALTER)
ageMean <- mean(MA_data$ALTER)
ageSD <- sd(MA_data$ALTER)
ageMedian <- median(MA_data$ALTER)
round(table(MA_data$GESCHLECHT)/N*100,2)
round(table(MA_data$BILDUNG)/N*100,2)
describeBy(MA_data$ALTER,MA_data$Condition)
#AMOTIVATION
MA_data$AMOTIVATION_SUM <- (MA_data$AMOTIVATION_1 + MA_data$AMOTIVATION_2 + MA_data$AMOTIVATION_3) / 3
psych::alpha(subset(MA_data, select = c(AMOTIVATION_1,AMOTIVATION_2,AMOTIVATION_3)))
#Crombachs α : 0.53
#EXTERNAL_REGULATION
MA_data$EXTERNAL_REGULATION_SUM <- (MA_data$EXTERNAL_REGULATION_1 + MA_data$EXTERNAL_REGULATION_2 + MA_data$EXTERNAL_REGULATION_3) / 3
psych::alpha(subset(MA_data, select = c(EXTERNAL_REGULATION_1,EXTERNAL_REGULATION_2,EXTERNAL_REGULATION_2)))
#Crombachs α : 0.85
#INTROJECTED_REGULATION
MA_data$INTROJECTED_REGULATION_SUM <- (MA_data$INTROJECTED_REGULATION_1 + MA_data$INTROJECTED_REGULATION_2 + MA_data$INTROJECTED_REGULATION_3) / 3
psych::alpha(subset(MA_data, select = c(INTROJECTED_REGULATION_1,INTROJECTED_REGULATION_2,INTROJECTED_REGULATION_3)))
#Crombachs α : 0.80
#IDENTIFIED_REGUALTION
MA_data$IDENTIFIED_REGUALTION_SUM <- (MA_data$IDENTIFIED_REGUALTION_1 + MA_data$IDENTIFIED_REGUALTION_2 + MA_data$IDENTIFIED_REGUALTION_3) / 3
psych::alpha(subset(MA_data, select = c(IDENTIFIED_REGUALTION_1,IDENTIFIED_REGUALTION_2,IDENTIFIED_REGUALTION_3)))
#Crombachs α : 0.52
#INTEGRATED_REGULATION
MA_data$INTEGRATED_REGULATION_SUM <- (MA_data$INTEGRATED_REGULATION_1 + MA_data$INTEGRATED_REGULATION_2 + MA_data$INTEGRATED_REGULATION_3) / 3
psych::alpha(subset(MA_data, select = c(INTEGRATED_REGULATION_1,INTEGRATED_REGULATION_2,INTEGRATED_REGULATION_3)))
#Crombachs α : 0.81
#INTRINSIC_REGUALTION
MA_data$INTRINSIC_REGUALTION_SUM <- (MA_data$INTRINSIC_REGUALTION_1 + MA_data$INTRINSIC_REGUALTION_2 + MA_data$INTRINSIC_REGUALTION_3) / 3
psych::alpha(subset(MA_data, select = c(INTRINSIC_REGUALTION_1,INTRINSIC_REGUALTION_2,INTRINSIC_REGUALTION_3)))
#Crombachs α : 0.77
MA_data$INTENTION_SUM <- (MA_data$INTENTION_1 + MA_data$INTENTION_2 + MA_data$INTENTION_3) / 3
psych::alpha(subset(MA_data, select = c(INTENTION_1,INTENTION_2,INTENTION_3)))
#Crombachs α : 0.98
#Requirement 1: Metric scaling of the AV : Yes
#Requirement 2: Homogeneity of variances
leveneTest(INTENTION_SUM ~ Condition*AGE_GROUP, data = MA_data)
#The variances are not equal, as p < 0.05. Violation of the homogeneity assumption.
ANOVA_BENEFIT <- aov(INTENTION_SUM ~ Condition + AGE_GROUP + Condition*AGE_GROUP, data = MA_data)
ANOVA_BENEFIT_ONE_WAY <- oneway.test(INTENTION_SUM ~ Condition + AGE_GROUP + Condition*AGE_GROUP, data = MA_data, var.equal = FALSE)
print(ANOVA_BENEFIT_ONE_WAY)
plot(ANOVA_BENEFIT, 2)
#Requirement 3: Assumption of a normal distribution can only be partially accepted
#H0 : normal distribution if p > 0.05
Young <- subset(MA_data, MA_data$AGE_GROUP == "18-29")
Old <- subset(MA_data, MA_data$AGE_GROUP == "30-75")
#AMOTIVATION
par(mfrow=c(1,2))
shapiro.test(Young$AMOTIVATION_SUM)
hist(scale(Young$AMOTIVATION_SUM))
shapiro.test(Old$AMOTIVATION_SUM)
hist(scale(Old$AMOTIVATION_SUM))
#EXTERNAL_REGULATION
par(mfrow=c(1,2))
shapiro.test(Young$EXTERNAL_REGULATION_SUM)
hist(scale(Young$EXTERNAL_REGULATION_SUM))
shapiro.test(Old$EXTERNAL_REGULATION_SUM)
hist(scale(Old$EXTERNAL_REGULATION_SUM))
#INTROJECTED_REGULATION
par(mfrow=c(1,2))
shapiro.test(Young$INTROJECTED_REGULATION_SUM)
hist(scale(Young$INTROJECTED_REGULATION_SUM))
shapiro.test(Old$INTROJECTED_REGULATION_SUM)
hist(scale(Old$INTROJECTED_REGULATION_SUM))
#IDENTIFIED_REGUALTION
par(mfrow=c(1,2))
shapiro.test(Young$IDENTIFIED_REGUALTION_SUM)
hist(scale(Young$IDENTIFIED_REGUALTION_SUM))
shapiro.test(Old$IDENTIFIED_REGUALTION_SUM)
hist(scale(Old$IDENTIFIED_REGUALTION_SUM))
#INTEGRATED_REGULATION
par(mfrow=c(1,2))
shapiro.test(Young$INTEGRATED_REGULATION_SUM)
hist(scale(Young$INTEGRATED_REGULATION_SUM))
shapiro.test(Old$INTEGRATED_REGULATION_SUM)
hist(scale(Old$INTEGRATED_REGULATION_SUM))
#INTRINSIC_REGUALTION
par(mfrow=c(1,2))
shapiro.test(Young$INTRINSIC_REGUALTION_SUM)
hist(scale(Young$INTRINSIC_REGUALTION_SUM))
shapiro.test(Old$INTRINSIC_REGUALTION_SUM)
hist(scale(Old$INTRINSIC_REGUALTION_SUM))
#equality of variances
LeveneTest(MA_data$AMOTIVATION_SUM, MA_data$Condition)
LeveneTest(MA_data$EXTERNAL_REGULATION_SUM, MA_data$AGE_GROUP)
LeveneTest(MA_data$INTROJECTED_REGULATION_SUM, MA_data$AGE_GROUP)
LeveneTest(MA_data$IDENTIFIED_REGUALTION_SUM, MA_data$AGE_GROUP)
LeveneTest(MA_data$INTEGRATED_REGULATION_SUM, MA_data$AGE_GROUP)
LeveneTest(MA_data$INTRINSIC_REGUALTION_SUM, MA_data$AGE_GROUP)
#equal variance is given
#Since there is no homogeneity of variance, the standard errors must be calculated "robustly". This function ensures that the ANOVA is less susceptible to unequal variances
summary(ANOVA_BENEFIT, robust = TRUE)
Anova(ANOVA_BENEFIT, type=3)
boxplot(INTENTION_SUM ~ AGE_GROUP, col = c("blue", "green"), data=MA_data)
describeBy(MA_data$AMOTIVATION_SUM, MA_data$AGE_GROUP)
describeBy(MA_data$EXTERNAL_REGULATION_SUM, MA_data$AGE_GROUP)
describeBy(MA_data$INTROJECTED_REGULATION_SUM, MA_data$AGE_GROUP)
describeBy(MA_data$IDENTIFIED_REGUALTION_SUM, MA_data$AGE_GROUP)
describeBy(MA_data$INTEGRATED_REGULATION_SUM, MA_data$AGE_GROUP)
describeBy(MA_data$INTRINSIC_REGUALTION_SUM, MA_data$AGE_GROUP)
boxplot(MA_data$AMOTIVATION_SUM ~ MA_data$AGE_GROUP)
boxplot(MA_data$EXTERNAL_REGULATION_SUM ~ MA_data$AGE_GROUP)
boxplot(MA_data$INTROJECTED_REGULATION_SUM ~ MA_data$AGE_GROUP)
boxplot(MA_data$IDENTIFIED_REGUALTION_SUM ~ MA_data$AGE_GROUP)
boxplot(MA_data$INTEGRATED_REGULATION_SUM ~ MA_data$AGE_GROUP)
boxplot(MA_data$INTRINSIC_REGUALTION_SUM ~ MA_data$AGE_GROUP)
T_Test_AMOTIVATION <- coin::wilcox_test(MA_data$AMOTIVATION_SUM ~ MA_data$AGE_GROUP, data = data, alternative = "greater", distribution = "exact", correct = FALSE, conf.int = TRUE)
T_Test_EXTERNAL_REGULATION <- coin::wilcox_test(MA_data$EXTERNAL_REGULATION_SUM ~ MA_data$AGE_GROUP, data = data, alternative = "greater", distribution = "exact", correct = FALSE, conf.int = TRUE)
T_Test_INTROJECTED_REGULATION <- coin::wilcox_test(MA_data$INTROJECTED_REGULATION_SUM ~ MA_data$AGE_GROUP, data = data, alternative = "less", distribution = "exact", correct = FALSE, conf.int = TRUE)
T_Test_IDENTIFIED_REGUALTION <- coin::wilcox_test(MA_data$IDENTIFIED_REGUALTION_SUM ~ MA_data$AGE_GROUP, data = data, alternative = "less", distribution = "exact", correct = FALSE, conf.int = TRUE)
T_Test_INTEGRATED_REGULATIO <- coin::wilcox_test(MA_data$INTEGRATED_REGULATION_SUM ~ MA_data$AGE_GROUP, data = data, alternative = "less", distribution = "exact", correct = FALSE, conf.int = TRUE)
T_Test_INTRINSIC_REGUALTION <- coin::wilcox_test(MA_data$INTRINSIC_REGUALTION_SUM ~ MA_data$AGE_GROUP, data = data, alternative = "less", distribution = "exact", correct = FALSE, conf.int = TRUE)
wilcox_effsize(T_Test_AMOTIVATION)
library(effsize)
install.packages("effsize")
install.packages("effsize")
The following analyses are reported in our method study and sorted according to the order in which they appear in the corresponding report.
install.packages("effsize")
install.packages("effsize", dependencies = TRUE)
devtools::install_github("rpsychologist/effsize")
