cat("ERROR: You have not specified a W variable in a model that requires it. \n")}
if (errcode[i,1]==12)
{cat(" \n")
cat("ERROR: You have specified a Z variable in a model that does not use it. \n")}
if (errcode[i,1]==13)
{cat(" \n")
cat("ERROR: You have not specified a Z variable in a model that requires it. \n")}
if (errcode[i,1]==15)
{cat(" \n")
cat("ERROR: One of your model variables exhibits no variation (it is a constant). \n")}
if (errcode[i,1]==16)
{cat(" \n")
cat("ERROR: BMATRIX is not the correct length or is otherwise invalid. \n")}
if (errcode[i,1]==17)
{cat(" \n")
cat("ERROR: WMATRIX is not the correct length or is otherwise invalid. \n")}
if (errcode[i,1]==18)
{cat(" \n")
cat("ERROR: ZMATRIX is not the correct length or is otherwise invalid. \n")}
if (errcode[i,1]==19)
{cat(" \n")
cat("ERROR: WZMATRIX is not the correct length or is otherwise invalid. \n")}
if (errcode[i,1]==20)
{cat(" \n")
cat("ERROR: A path fixed at zero cannot be moderated. \n")}
if (errcode[i,1]==60)
{cat(" \n")
cat("PROCESS is now ready for use.\n")
cat("Copyright 2021 by Andrew F. Hayes ALL RIGHTS RESERVED\n \n")}
if (errcode[i,1]==21)
{cat(" \n")
cat("ERROR: If only one moderator is specified, it must be specified as W. \n")}
if (errcode[i,1]==22)
{cat(" \n")
cat("ERROR: In BMATRIX, X must be specified to affect at least one variable. \n")}
if (errcode[i,1]==23)
{cat(" \n")
cat("ERROR: In BMATRIX, at least one variable must be specified to affect Y. \n")}
if (errcode[i,1]==24)
{cat(" \n")
cat("ERROR: You must specify a model number or a custom BMATRIX specification. \n")}
if (errcode[i,1]==25)
{cat(" \n")
cat("ERROR: BMATRIX cannot be used in conjunction with a model number. \n")}
if (errcode[i,1]==26)
{cat(" \n")
cat("ERROR: Your model has a dangling mediator (all Ms must affect and be affected). \n")}
if (errcode[i,1]==29)
{cat(" \n")
cat("ERROR: CMATRIX is not the correct length or is otherwise invalid. \n")}
if (errcode[i,1]==30)
{cat(" \n")
cat("ERROR: In CMATRIX, all covariates must be assigned to an M or a Y. \n")}
if ((errcode[i,1]==31) & (singlr==0))
{cat(" \n")
singlr<-1
cat("ERROR: A linear or near linear dependence (singularity) exists in the data. \n")}
if (errcode[i,1]==32)
{cat(" \n")
cat("ERROR: Models 80 and 81 require between 3 and 6 mediators. \n")}
if (errcode[i,1]==33)
{cat(" \n")
cat("ERROR: Model 82 requires 4 mediators. \n")}
if (errcode[i,1]==34)
{cat(" \n")
cat("ERROR: This model number requires between 2 and 6 mediators. \n")}
if (errcode[i,1]==35)
{cat(" \n")
cat("ERROR: In a model with only one moderator, that moderator must be W. \n")}
if (errcode[i,1]==36)
{cat(" \n")
cat("ERROR: A serial mediation model cannot have more than 6 mediators. \n")}
if (errcode[i,1]==37)
{cat(" \n")
cat("ERROR: No more than 10 mediators are allowed in a PROCESS command. \n")}
if (errcode[i,1]==38)
{cat(" \n")
cat("ERROR: XCATCODE is not provided, not the correct length, or is otherwise invalid. \n")}
if (errcode[i,1]==39)
{cat(" \n")
cat("ERROR: WCATCODE is not provided, not the correct length, or is otherwise invalid. \n")}
if (errcode[i,1]==40)
{cat(" \n")
cat("ERROR: ZCATCODE is not provided, not the correct length, or is otherwise invalid. \n")}
if (errcode[i,1]==41)
{cat(" \n")
cat("ERROR: Models 1, 2, and 3 cannot be customized. \n")}
if (errcode[i,1]==43)
{cat(" \n")
cat("ERROR: PROCESS does not allow dichotomous mediators. \n")}
if (errcode[i,1]==50)
{cat(" \n")
cat("ERROR: A multicategorical moderator cannot be specified as a covariate. \n")}
if (errcode[i,1]==51)
{cat(" \n")
cat("ERROR: A variable you specified as a covariate is a moderator in all equations. \n")}
if ((errcode[i,1]==52) & (mcerpt==0))
{mcerpt<-1
cat(" \n")
cat("ERROR: A variable specified as multicategorical must have at least three categories. \n")}
if (errcode[i,1]==53)
{cat(" \n")
cat("ERROR: Variables declared as factors are not accepted by PROCESS.\n")}
}
#if (saveboot==1)
#{resultm<-list(resultm,boots)}
#invisible(resultm)
resultms<-NULL
if ((saveboot==0) & (saveest==1)){resultms<-resultm}
if ((saveboot==1) & (saveest==0)){resultms<-boots}
if ((saveboot==1) & (saveest==1)){resultms<-(list(boots,resultm))}
invisible(resultms)
}
process(activate=1)
#process(data = MA_data, model=14, x= "ALTER", y="INTENTION_SUM", m="AMOTIVATION_SUM", w="c_0001",seed = 654321)
process(data = MA_data, model=14, x= "AGE_GROUP_MEDIATION", y="INTENTION_SUM", m="AMOTIVATION_SUM", w="c_0001",seed = 654321)
process(data = MA_data, model=15, x= "AGE_GROUP_MEDIATION", y="INTENTION_SUM", m="EXTERNAL_REGULATION_SUM", w="c_0001",seed = 654321)
process(data = MA_data, model=15, x= "AGE_GROUP_MEDIATION", y="INTENTION_SUM", m="INTEGRATED_REGULATION_SUM", w="c_0001",seed = 654321)
process(data = MA_data, model=15, x= "AGE_GROUP_MEDIATION", y="INTENTION_SUM", m="INTRINSIC_REGULATION_SUM", w="c_0001",seed = 654321)
process(data = MA_data, model=15, x= "AGE_GROUP_MEDIATION", y="INTENTION_SUM", m="AMOTIVATION_SUM", w="c_0001",seed = 654321)
process(data = MA_data, model=15, x= "AGE_GROUP_MEDIATION", y="INTENTION_SUM", m="EXTERNAL_REGULATION_SUM", w="c_0001",seed = 654321)
process(data = MA_data, model=15, x= "AGE_GROUP_MEDIATION", y="INTENTION_SUM", m="INTEGRATED_REGULATION_SUM", w="c_0001",seed = 654321)
process(data = MA_data, model=14, x= "AGE_GROUP_MEDIATION", y="INTENTION_SUM", m="EXTERNAL_REGULATION_SUM", w="c_0001",seed = 654321)
knitr::opts_chunk$set(echo = TRUE)
interaction.plot(x.factor = MA_data_no_outliers$Condition, #x-axis variable
trace.factor = MA_data_no_outliers$AGE_GROUP, #variable for lines
response = MA_data_no_outliers$INTENTION_SUM, #y-axis variable
fun = median, #metric to plot
ylab = "Blutspendeintention",
xlab = "Kontroll -und Experimentalgruppen",
col = c("#00868B", "#8B0A50""),
lty = 1, #line type
lwd = 5, #line width
trace.label = "Altersgruppe")
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
#plot(pressure)
#load packages
library(psych)
library(expss)
library(plyr)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(reshape2)
library(tidyr)
library(Hmisc)
library(sjPlot)
library(table1)
library(DescTools)
library(moments)
library(corrplot)
library(QuantPsyc)
library(coin)
library(corrr)
library(knitr)
library(kableExtra)
library(tidyverse)
library(apaTables)
library(sandwich)
library(carData)
library(car)
library(Rmisc)
library(boot)
library(rstatix)
library(hrbrthemes)
library(multcompView)
data  <- read.csv("data_project_1013280_2024_04_17.csv", sep = ";")
MA_data <- subset(data, ALTER >= 18 & ALTER <= 75 & ATTENTION_CHECK == 1)
#describe(data)
#table(data$ALTER)
#table(data$ATTENTION_CHECK)
#table(data$ALTER, data$ATTENTION_CHECK != 1)
#head(MA_data)
#unique(MA_data$AGE_GROUP)
#show(MA_data$AGE_GROUP)
MA_data$AGE_GROUP <- NA
MA_data$AGE_GROUP <- factor(
MA_data$AGE_GROUP,
levels = c(1,2),
labels = c("18-29", "30-75")
)
MA_data$AGE_GROUP[which(MA_data$ALTER >= 18 & MA_data$ALTER <=29 )] <- "18-29"
MA_data$AGE_GROUP[which(MA_data$ALTER >= 30 & MA_data$ALTER <= 75 )] <- "30-75"
summary(MA_data$ALTER)
table(MA_data$ALTER<30, MA_data$ALTER>=30)
summary(MA_data$AGE_GROUP)
agegroupwave <- c(
"1" = "18-29",
"2" = "30-75"
)
MA_data$AGE_GROUP_MEDIATION <- 0  # Setze zunächst alle Werte auf 0
MA_data$AGE_GROUP_MEDIATION[which(MA_data$ALTER >= 18 & MA_data$ALTER <= 29)] <- 1  # Setze die entsprechenden Werte auf 1
MA_data$AGE_GROUP_MEDIATION[which(MA_data$ALTER >= 30 & MA_data$ALTER <= 75)] <- 2  # Setze die entsprechenden Werte auf 2
MA_data$AGE_GROUP_MEDIATION <- as.integer(MA_data$AGE_GROUP_MEDIATION)  # Konvertiere die Spalte in Ganzzahlen
MA_data$GENDER_GROUP <- NA
MA_data$GENDER_GROUP <- factor(
MA_data$GENDER_GROUP,
levels = c(1,2,3,4),
labels = c("Weiblich","Männlich","Divers","Keine Angabe")
)
MA_data$GENDER_GROUP[which(MA_data$GESCHLECHT == 1)] <- "Weiblich"
MA_data$GENDER_GROUP[which(MA_data$GESCHLECHT == 2)] <- "Männlich"
MA_data$GENDER_GROUP[which(MA_data$GESCHLECHT == 3)] <- "Divers"
MA_data$GENDER_GROUP[which(MA_data$GESCHLECHT == 4)] <- "Keine Angabe"
summary(MA_data$GENDER_GROUP)
#data$GESCHLECHT <- factor(
#data$GESCHLECHT,
#levels = c(1,2,3,4),
#labels = c("Weiblich", "Männlich","Divers","Keine Angabe")
#)
MA_data$EDUCATION_GROUP <- NA
MA_data$EDUCATION_GROUP <- factor(
MA_data$EDUCATION_GROUP,
levels = c(1,2,3,4,5,6,7),
labels = c("Hauptschulabschluss","Mittlere Reife","Fachhochschulreife","Allgemeine Hochschulreife","Bachelor","Master","Andere")
)
MA_data$EDUCATION_GROUP[which(MA_data$BILDUNG == 1)] <- "Hauptschulabschluss"
MA_data$EDUCATION_GROUP[which(MA_data$BILDUNG == 2)] <- "Mittlere Reife"
MA_data$EDUCATION_GROUP[which(MA_data$BILDUNG == 3)] <- "Fachhochschulreife"
MA_data$EDUCATION_GROUP[which(MA_data$BILDUNG == 4)] <- "Allgemeine Hochschulreife"
MA_data$EDUCATION_GROUP[which(MA_data$BILDUNG == 5)] <- "Bachelor"
MA_data$EDUCATION_GROUP[which(MA_data$BILDUNG == 6)] <- "Master"
MA_data$EDUCATION_GROUP[which(MA_data$BILDUNG == 7)] <- "Andere"
summary(MA_data$EDUCATION_GROUP)
MA_data$COUNTRY_GROUP <- NA
MA_data$COUNTRY_GROUP <- factor(
MA_data$COUNTRY_GROUP,
levels = c(1,2,3,4),
labels = c("Deutschland","Österreich","Schweiz","Andere")
)
MA_data$COUNTRY_GROUP[which(MA_data$LAND == 1)] <- "Deutschland"
MA_data$COUNTRY_GROUP[which(MA_data$LAND == 2)] <- "Österreich"
MA_data$COUNTRY_GROUP[which(MA_data$LAND == 3)] <- "Schweiz"
MA_data$COUNTRY_GROUP[which(MA_data$LAND == 4)] <- "Andere"
summary(MA_data$COUNTRY_GROUP)
MA_data$BDB_GROUP <- NA
MA_data$BDB_GROUP <- factor(
MA_data$BDB_GROUP,
levels = c(1,2,3),
labels = c("Ja","Nein","Keine Angabe")
)
MA_data$BDB_GROUP[which(MA_data$BLUTSPENDEVERHALTEN == 1)] <- "Ja"
MA_data$BDB_GROUP[which(MA_data$BLUTSPENDEVERHALTEN == 2)] <- "Nein"
MA_data$BDB_GROUP[which(MA_data$BLUTSPENDEVERHALTEN == 3)] <- "Keine Angabe"
#table(MA_data$BDB_GROUP)
MA_data$BDO_GROUP <- NA
MA_data$BDO_GROUP <- factor(
MA_data$BDO_GROUP,
levels = c(1,3,4),
labels = c("Deutsches Rotes Kreuz","Weiß ich nicht","Andere")
)
MA_data$BDO_GROUP[which(MA_data$BLUTSPENDEORGANISATION == 1)] <- "Deutsches Rotes Kreuz"
MA_data$BDO_GROUP[which(MA_data$BLUTSPENDEORGANISATION == 3)] <- "Weiß ich nicht"
MA_data$BDO_GROUP[which(MA_data$BLUTSPENDEORGANISATION == 4)] <- "Andere"
#table(MA_data$BDO_GROUP)
MA_data$Condition <- factor(MA_data$c_0001, levels = c(1,2,3))
labels = c("Individueller Anreiz", "Sozialer Anreiz", "Kontrollgruppe")
#table(MA_data$Condition)
#summary(data$c_0001)
#MA_data <- apply_labels(MA_data,
#AGE_GROUP = "Age group",
#GENDER_GROUP = "Gender",
#EDUCATION_GROUP = "Level of education",
#COUNTRY_GROUP = "Residence country")
#html_code <- MA_data %>%
#tab_cells(AGE_GROUP,GENDER_GROUP,EDUCATION_GROUP) %>%
#tab_cols(total(label = "Sum"),Condition) %>%
#tab_stat_cases(total_label = "All") %>%
#tab_pivot() %>%
#htmlTable(align = "c",css.cell = c("width: 400px"))
#this code must be adapted according to the personal file path
#file_path <- "C:\\Users\\timri\\Desktop\\Uni Vorlesungen\\Master GeKo\\Masterarbeit\\Statistiken und Auswertung\\Auswertung"
#file_name <- "Deskriptiv.html"
#writeLines(html_code, file.path("C:\\Users\\timri\\Desktop\\Uni Vorlesungen\\Master GeKo\\Masterarbeit\\Statistiken und Auswertung\\Auswertung", "Deskriptiv.html"))
MA_data_tabele <- MA_data
label(MA_data_tabele$GENDER_GROUP)       <- "Geschlecht"
label(MA_data_tabele$ALTER)       <- "Alter"
label(MA_data_tabele$EDUCATION_GROUP)     <- "Bildung"
label(MA_data_tabele$COUNTRY_GROUP) <- "Land"
label(MA_data_tabele$BDB_GROUP) <- "Blutspendeverhalten"
label(MA_data_tabele$BDO_GROUP) <- "Blutspendeorganisation"
units(MA_data_tabele$ALTER)       <- "Jahre"
caption  <- "Deskriptive Daten"
#footnote <- "ᵃ Also known as Breslow thickness"
table1(~ GENDER_GROUP + ALTER + EDUCATION_GROUP + COUNTRY_GROUP + BDB_GROUP + BDO_GROUP | Condition, data=MA_data_tabele, overall=c(left="Total"), caption=caption) #footnote=footnote)
N <- nrow(MA_data)
ageRange_min <- min(MA_data$ALTER)
ageRange_max <- max(MA_data$ALTER)
ageMean <- mean(MA_data$ALTER)
ageSD <- sd(MA_data$ALTER)
ageMedian <- median(MA_data$ALTER)
table(MA_data$ALTER)
round(table(MA_data$GESCHLECHT)/N*100,2)
round(table(MA_data$BILDUNG)/N*100,2)
describeBy(MA_data$ALTER,MA_data$Condition)
table1(~ ageRange_max + ageRange_min + ageMean + ageSD + ageMedian, data=MA_data_tabele, caption=caption)
p <- MA_data %>%
filter( ALTER<75 ) %>%
ggplot( aes(x=ALTER)) +
geom_histogram( binwidth=1, fill="#00868B", color="#e9ecef", alpha=0.9) +
ggtitle("Altersverteilung") +
theme_ipsum() +
theme(
plot.title = element_text(size=15),
axis.title.x = element_text(hjust = 0.5, vjust = -0.5),
axis.title.y = element_text(hjust = 0.5, vjust = -0.5)
) +
labs(
x = "Alter",
y = "Häufigkeit"
)
p
#table(MA_data$ALTER)
#AMOTIVATION
MA_data$AMOTIVATION_SUM <- (MA_data$AMOTIVATION_1 + MA_data$AMOTIVATION_2 + MA_data$AMOTIVATION_3) / 3
psych::alpha(subset(MA_data, select = c(AMOTIVATION_1,AMOTIVATION_2,AMOTIVATION_3)))
#Crombachs α : .53
psych::alpha(subset(MA_data, select = c(AMOTIVATION_1,AMOTIVATION_2)))
#Crombachs α : .64
MA_data$AMOTIVATION_SUM_1_2 <- (MA_data$AMOTIVATION_1 + MA_data$AMOTIVATION_2) / 2
#psych::alpha(subset(MA_data, select = c(AMOTIVATION_1,AMOTIVATION_3)))
#psych::alpha(subset(MA_data, select = c(AMOTIVATION_2,AMOTIVATION_3)))
#EXTERNAL_REGULATION
MA_data$EXTERNAL_REGULATION_SUM <- (MA_data$EXTERNAL_REGULATION_1 + MA_data$EXTERNAL_REGULATION_2 + MA_data$EXTERNAL_REGULATION_3) / 3
psych::alpha(subset(MA_data, select = c(EXTERNAL_REGULATION_1,EXTERNAL_REGULATION_2,EXTERNAL_REGULATION_2)))
#Crombachs α : .85
#INTROJECTED_REGULATION
MA_data$INTROJECTED_REGULATION_SUM <- (MA_data$INTROJECTED_REGULATION_1 + MA_data$INTROJECTED_REGULATION_2 + MA_data$INTROJECTED_REGULATION_3) / 3
psych::alpha(subset(MA_data, select = c(INTROJECTED_REGULATION_1,INTROJECTED_REGULATION_2,INTROJECTED_REGULATION_3)))
#Crombachs α : .80
#IDENTIFIED_REGUALTION
MA_data$IDENTIFIED_REGUALTION_SUM <- (MA_data$IDENTIFIED_REGUALTION_1 + MA_data$IDENTIFIED_REGUALTION_2 + MA_data$IDENTIFIED_REGUALTION_3) / 3
psych::alpha(subset(MA_data, select = c(IDENTIFIED_REGUALTION_1,IDENTIFIED_REGUALTION_2,IDENTIFIED_REGUALTION_3)))
#Crombachs α : .52
MA_data$IDENTIFIED_REGUALTION_SUM_2_3 <- (MA_data$IDENTIFIED_REGUALTION_2 + MA_data$IDENTIFIED_REGUALTION_3) / 2
psych::alpha(subset(MA_data, select = c(IDENTIFIED_REGUALTION_2,IDENTIFIED_REGUALTION_3)))
#Crombachs α : .65
#INTEGRATED_REGULATION
MA_data$INTEGRATED_REGULATION_SUM <- (MA_data$INTEGRATED_REGULATION_1 + MA_data$INTEGRATED_REGULATION_2 + MA_data$INTEGRATED_REGULATION_3) / 3
psych::alpha(subset(MA_data, select = c(INTEGRATED_REGULATION_1,INTEGRATED_REGULATION_2,INTEGRATED_REGULATION_3)))
#Crombachs α : .81
#INTRINSIC_REGUALTION
MA_data$INTRINSIC_REGULATION_SUM <- (MA_data$INTRINSIC_REGUALTION_1 + MA_data$INTRINSIC_REGUALTION_2 + MA_data$INTRINSIC_REGUALTION_3) / 3
psych::alpha(subset(MA_data, select = c(INTRINSIC_REGUALTION_1,INTRINSIC_REGUALTION_2,INTRINSIC_REGUALTION_3)))
#Crombachs α : .77
MA_data$INTENTION_SUM <- (MA_data$INTENTION_1 + MA_data$INTENTION_2 + MA_data$INTENTION_3) / 3
psych::alpha(subset(MA_data, select = c(INTENTION_1,INTENTION_2,INTENTION_3)))
#Crombachs α : 0.98
library(dplyr)
identify_outliers <- function(data) {
Q1 <- quantile(data$INTENTION_SUM, 0.25)
Q3 <- quantile(data$INTENTION_SUM, 0.75)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
outliers <- data %>%
filter(INTENTION_SUM < lower_bound | INTENTION_SUM > upper_bound)
return(outliers)
}
outliers <- identify_outliers(MA_data)
print(outliers)
MA_data_no_outliers <- MA_data %>%
filter(!(INTENTION_SUM %in% outliers$INTENTION_SUM))
summary(MA_data_no_outliers)
#No observations in the ‘Outliners’ data set. Accordingly, there are no outliers
ANOVA_BENEFIT <- aov(INTENTION_SUM ~ Condition + AGE_GROUP + Condition*AGE_GROUP, data = MA_data)
#Cook Distanz test
plot(ANOVA_BENEFIT, 4)
cd <- cooks.distance(ANOVA_BENEFIT)
#view(cd<4/396)
indices_to_remove <- c(1, 22, 85, 113, 175, 192, 216, 231, 267, 268, 273, 309, 328, 330, 337, 399, 400, 401, 403)
MA_data_no_outliers <- MA_data_no_outliers[-indices_to_remove, ]
ANOVA_BENEFIT_NO_OUTLIERS <- aov(INTENTION_SUM ~ Condition + AGE_GROUP + Condition*AGE_GROUP, data = MA_data_no_outliers)
#Requirement 1: Metric scaling of the AV : Yes
#Requirement 2: Homogeneity of variances
leveneTest(INTENTION_SUM ~ Condition*AGE_GROUP, data = MA_data)
leveneTest(INTENTION_SUM ~ Condition*AGE_GROUP, data = MA_data_no_outliers)
#The variances are not equal, as p < 0.05. Violation of the homogeneity assumption.
nv <- lm(INTENTION_SUM ~ Condition*AGE_GROUP, data = MA_data)
nvno <- lm(INTENTION_SUM ~ Condition*AGE_GROUP, data = MA_data_no_outliers)
ANOVA_BENEFIT_ONE_WAY <- oneway.test(INTENTION_SUM ~ Condition + AGE_GROUP + Condition*AGE_GROUP, data = MA_data, var.equal = FALSE)
print(ANOVA_BENEFIT_ONE_WAY)
ggqqplot(residuals(nv))
ggqqplot(residuals(nvno))
#plot(ANOVA_BENEFIT, 2)
#Requirement 3: Assumption of a normal distribution can only be partially accepted
#H0 : normal distribution if p > 0.05
Young <- subset(MA_data, MA_data$AGE_GROUP == "18-29")
Old <- subset(MA_data, MA_data$AGE_GROUP == "30-75")
#AMOTIVATION
par(mfrow=c(1,2))
shapiro.test(Young$AMOTIVATION_SUM)
hist(scale(Young$AMOTIVATION_SUM))
shapiro.test(Old$AMOTIVATION_SUM)
hist(scale(Old$AMOTIVATION_SUM))
#EXTERNAL_REGULATION
par(mfrow=c(1,2))
shapiro.test(Young$EXTERNAL_REGULATION_SUM)
hist(scale(Young$EXTERNAL_REGULATION_SUM))
shapiro.test(Old$EXTERNAL_REGULATION_SUM)
hist(scale(Old$EXTERNAL_REGULATION_SUM))
#INTROJECTED_REGULATION
par(mfrow=c(1,2))
shapiro.test(Young$INTROJECTED_REGULATION_SUM)
hist(scale(Young$INTROJECTED_REGULATION_SUM))
shapiro.test(Old$INTROJECTED_REGULATION_SUM)
hist(scale(Old$INTROJECTED_REGULATION_SUM))
#IDENTIFIED_REGUALTION
par(mfrow=c(1,2))
shapiro.test(Young$IDENTIFIED_REGUALTION_SUM)
hist(scale(Young$IDENTIFIED_REGUALTION_SUM))
shapiro.test(Old$IDENTIFIED_REGUALTION_SUM)
hist(scale(Old$IDENTIFIED_REGUALTION_SUM))
#INTEGRATED_REGULATION
par(mfrow=c(1,2))
shapiro.test(Young$INTEGRATED_REGULATION_SUM)
hist(scale(Young$INTEGRATED_REGULATION_SUM))
shapiro.test(Old$INTEGRATED_REGULATION_SUM)
hist(scale(Old$INTEGRATED_REGULATION_SUM))
#INTRINSIC_REGUALTION
par(mfrow=c(1,2))
shapiro.test(Young$INTRINSIC_REGULATION_SUM)
hist(scale(Young$INTRINSIC_REGULATION_SUM))
shapiro.test(Old$INTRINSIC_REGULATION_SUM)
hist(scale(Old$INTRINSIC_REGULATION_SUM))
#equality of variances
LeveneTest(MA_data$AMOTIVATION_SUM, MA_data$Condition)
LeveneTest(MA_data$EXTERNAL_REGULATION_SUM, MA_data$AGE_GROUP)
LeveneTest(MA_data$INTROJECTED_REGULATION_SUM, MA_data$AGE_GROUP)
LeveneTest(MA_data$IDENTIFIED_REGUALTION_SUM, MA_data$AGE_GROUP)
LeveneTest(MA_data$INTEGRATED_REGULATION_SUM, MA_data$AGE_GROUP)
LeveneTest(MA_data$INTRINSIC_REGULATION_SUM, MA_data$AGE_GROUP)
#equal variance is given
#Since there is no homogeneity of variance, the standard errors must be calculated "robustly". This function ensures that the ANOVA is less susceptible to unequal variances
summary(ANOVA_BENEFIT, robust = TRUE)
Anova(ANOVA_BENEFIT, type=3)
#ANOVA with Cook Distance Test
Anova(ANOVA_BENEFIT_NO_OUTLIERS, type=3)
#Post Hoc Test
TukeyHSD(ANOVA_BENEFIT, conf.level = .95)
TUKEY <- TukeyHSD(ANOVA_BENEFIT, conf.level = .95)
# Tuckey test representation :
par(mar = c(5, 5, 4, 2) + 2.0)
plot(TUKEY , las=1, col="#00688B")
#No Outliers
TukeyHSD(ANOVA_BENEFIT_NO_OUTLIERS, conf.level = .95)
TUKEY_no_outliers <- TukeyHSD(ANOVA_BENEFIT_NO_OUTLIERS, conf.level = .95)
par(mar = c(5, 5, 4, 2) + 2.0)
plot(TUKEY_no_outliers , las=1, col="#00688B")
#Table ANOVA
apa.aov.table(ANOVA_BENEFIT, filename = "ANOVA_APA_2.doc")
#apa.aov.table(ANOVA_BENEFIT_NO_OUTLIERS, filename = "ANOVA_APA_3.doc")
#boxplot(INTENTION_SUM ~ AGE_GROUP, col = c("blue", "green"), data=MA_data)
#ggboxplot(MA_data, x= "INTENTION_SUM", y = "AGE_GROUP", color = "green")
Meine_Palette <- c("#00868B", "#00688B")
#boxplot
ggboxplot(MA_data, x = "Condition", y = "INTENTION_SUM", fill = "AGE_GROUP", palette = Meine_Palette)
#boxblot with no outliers
ggboxplot(MA_data_no_outliers, x = "Condition", y = "INTENTION_SUM", fill = "AGE_GROUP", palette = Meine_Palette)
#Interactionplot
interaction.plot(x.factor = MA_data$Condition, #x-axis variable
trace.factor = MA_data$AGE_GROUP, #variable for lines
response = MA_data$INTENTION_SUM, #y-axis variable
fun = median, #metric to plot
ylab = "Blutspendeintention",
xlab = "Kontroll -und Experimentalgruppen",
col = c("#00868B", "#00688B"),
lty = 1, #line type
lwd = 5, #line width
trace.label = "Altersgruppe")
#no outliers
interaction.plot(x.factor = MA_data_no_outliers$Condition, #x-axis variable
trace.factor = MA_data_no_outliers$AGE_GROUP, #variable for lines
response = MA_data_no_outliers$INTENTION_SUM, #y-axis variable
fun = median, #metric to plot
ylab = "Blutspendeintention",
xlab = "Kontroll -und Experimentalgruppen",
col = c("#00868B", "#8B0A50""),
lty = 1, #line type
lwd = 5, #line width
trace.label = "Altersgruppe")
Meine_Palette <- c("#00868B", "#00688B")
#boxplot
ggboxplot(MA_data, x = "Condition", y = "INTENTION_SUM", fill = "AGE_GROUP", palette = Meine_Palette)
#boxblot with no outliers
ggboxplot(MA_data_no_outliers, x = "Condition", y = "INTENTION_SUM", fill = "AGE_GROUP", palette = Meine_Palette)
#Interactionplot
interaction.plot(x.factor = MA_data$Condition, #x-axis variable
trace.factor = MA_data$AGE_GROUP, #variable for lines
response = MA_data$INTENTION_SUM, #y-axis variable
fun = median, #metric to plot
ylab = "Blutspendeintention",
xlab = "Kontroll -und Experimentalgruppen",
col = c("#00868B", "#00688B"),
lty = 1, #line type
lwd = 5, #line width
trace.label = "Altersgruppe")
#no outliers
interaction.plot(x.factor = MA_data_no_outliers$Condition, #x-axis variable
trace.factor = MA_data_no_outliers$AGE_GROUP, #variable for lines
response = MA_data_no_outliers$INTENTION_SUM, #y-axis variable
fun = median, #metric to plot
ylab = "Blutspendeintention",
xlab = "Kontroll -und Experimentalgruppen",
col = c("#00868B", "#8B0A50"),
lty = 1, #line type
lwd = 5, #line width
trace.label = "Altersgruppe")
leveneTest(INTENTION_SUM ~ Condition*AGE_GROUP, data = MA_data_no_outliers)
leveneTest(INTENTION_SUM ~ Condition*AGE_GROUP, data = MA_data)
leveneTest(INTENTION_SUM ~ Condition*AGE_GROUP, data = MA_data_no_outliers)
