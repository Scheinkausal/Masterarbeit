#Crombachs α : .81
#INTRINSIC_REGUALTION
MA_data$INTRINSIC_REGULATION_SUM <- (MA_data$INTRINSIC_REGUALTION_1 + MA_data$INTRINSIC_REGUALTION_2 + MA_data$INTRINSIC_REGUALTION_3) / 3
psych::alpha(subset(MA_data, select = c(INTRINSIC_REGUALTION_1,INTRINSIC_REGUALTION_2,INTRINSIC_REGUALTION_3)))
#Crombachs α : .77
MA_data$INTENTION_SUM <- (MA_data$INTENTION_1 + MA_data$INTENTION_2 + MA_data$INTENTION_3) / 3
psych::alpha(subset(MA_data, select = c(INTENTION_1,INTENTION_2,INTENTION_3)))
#Crombachs α : 0.98
library(dplyr)
identify_outliers <- function(data) {
Q1 <- quantile(data$INTENTION_SUM, 0.25)
Q3 <- quantile(data$INTENTION_SUM, 0.75)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
outliers <- data %>%
filter(INTENTION_SUM < lower_bound | INTENTION_SUM > upper_bound)
return(outliers)
}
outliers <- identify_outliers(MA_data)
print(outliers)
MA_data_no_outliers <- MA_data %>%
filter(!(INTENTION_SUM %in% outliers$INTENTION_SUM))
summary(MA_data_no_outliers)
#No observations in the ‘Outliners’ data set. Accordingly, there are no outliers
#Requirement 1: Metric scaling of the AV : Yes
#Requirement 2: Homogeneity of variances
leveneTest(INTENTION_SUM ~ Condition*AGE_GROUP, data = MA_data)
#The variances are not equal, as p < 0.05. Violation of the homogeneity assumption.
ANOVA_BENEFIT <- aov(INTENTION_SUM ~ Condition + AGE_GROUP + Condition*AGE_GROUP, data = MA_data)
nv <- lm(INTENTION_SUM ~ Condition*AGE_GROUP, data = MA_data)
ANOVA_BENEFIT_ONE_WAY <- oneway.test(INTENTION_SUM ~ Condition + AGE_GROUP + Condition*AGE_GROUP, data = MA_data, var.equal = FALSE)
print(ANOVA_BENEFIT_ONE_WAY)
ggqqplot(residuals(nv))
#plot(ANOVA_BENEFIT, 2)
#Requirement 3: Assumption of a normal distribution can only be partially accepted
#H0 : normal distribution if p > 0.05
Young <- subset(MA_data, MA_data$AGE_GROUP == "18-29")
Old <- subset(MA_data, MA_data$AGE_GROUP == "30-75")
#AMOTIVATION
par(mfrow=c(1,2))
shapiro.test(Young$AMOTIVATION_SUM)
hist(scale(Young$AMOTIVATION_SUM))
shapiro.test(Old$AMOTIVATION_SUM)
hist(scale(Old$AMOTIVATION_SUM))
#EXTERNAL_REGULATION
par(mfrow=c(1,2))
shapiro.test(Young$EXTERNAL_REGULATION_SUM)
hist(scale(Young$EXTERNAL_REGULATION_SUM))
shapiro.test(Old$EXTERNAL_REGULATION_SUM)
hist(scale(Old$EXTERNAL_REGULATION_SUM))
#INTROJECTED_REGULATION
par(mfrow=c(1,2))
shapiro.test(Young$INTROJECTED_REGULATION_SUM)
hist(scale(Young$INTROJECTED_REGULATION_SUM))
shapiro.test(Old$INTROJECTED_REGULATION_SUM)
hist(scale(Old$INTROJECTED_REGULATION_SUM))
#IDENTIFIED_REGUALTION
par(mfrow=c(1,2))
shapiro.test(Young$IDENTIFIED_REGUALTION_SUM)
hist(scale(Young$IDENTIFIED_REGUALTION_SUM))
shapiro.test(Old$IDENTIFIED_REGUALTION_SUM)
hist(scale(Old$IDENTIFIED_REGUALTION_SUM))
#INTEGRATED_REGULATION
par(mfrow=c(1,2))
shapiro.test(Young$INTEGRATED_REGULATION_SUM)
hist(scale(Young$INTEGRATED_REGULATION_SUM))
shapiro.test(Old$INTEGRATED_REGULATION_SUM)
hist(scale(Old$INTEGRATED_REGULATION_SUM))
#INTRINSIC_REGUALTION
par(mfrow=c(1,2))
shapiro.test(Young$INTRINSIC_REGULATION_SUM)
hist(scale(Young$INTRINSIC_REGULATION_SUM))
shapiro.test(Old$INTRINSIC_REGULATION_SUM)
hist(scale(Old$INTRINSIC_REGULATION_SUM))
#equality of variances
LeveneTest(MA_data$AMOTIVATION_SUM, MA_data$Condition)
LeveneTest(MA_data$EXTERNAL_REGULATION_SUM, MA_data$AGE_GROUP)
LeveneTest(MA_data$INTROJECTED_REGULATION_SUM, MA_data$AGE_GROUP)
LeveneTest(MA_data$IDENTIFIED_REGUALTION_SUM, MA_data$AGE_GROUP)
LeveneTest(MA_data$INTEGRATED_REGULATION_SUM, MA_data$AGE_GROUP)
LeveneTest(MA_data$INTRINSIC_REGULATION_SUM, MA_data$AGE_GROUP)
#equal variance is given
#Since there is no homogeneity of variance, the standard errors must be calculated "robustly". This function ensures that the ANOVA is less susceptible to unequal variances
summary(ANOVA_BENEFIT, robust = TRUE)
Anova(ANOVA_BENEFIT, type=3)
#Cook Distanz test
plot(ANOVA_BENEFIT, 4)
#Post Hoc Test
TukeyHSD(ANOVA_BENEFIT, conf.level = .95)
TUKEY <- TukeyHSD(ANOVA_BENEFIT, conf.level = .95)
# Tuckey test representation :
par(mar = c(5, 5, 4, 2) + 2.0)
plot(TUKEY , las=1, col="#00688B")
apa.aov.table(ANOVA_BENEFIT, filename = "ANOVA_APA.doc_2")
#boxplot(INTENTION_SUM ~ AGE_GROUP, col = c("blue", "green"), data=MA_data)
#ggboxplot(MA_data, x= "INTENTION_SUM", y = "AGE_GROUP", color = "green")
Meine_Palette <- c("#00868B", "#00688B")
#boxplot
ggboxplot(MA_data, x = "Condition", y = "INTENTION_SUM", fill = "AGE_GROUP", palette = Meine_Palette)
#Interactionplot
interaction.plot(x.factor = MA_data$Condition, #x-axis variable
trace.factor = MA_data$AGE_GROUP, #variable for lines
response = MA_data$INTENTION_SUM, #y-axis variable
fun = median, #metric to plot
ylab = "Blutspendeintention",
xlab = "Kontroll -und Experimentalgruppen",
col = c("#00868B", "#00688B"),
lty = 1, #line type
lwd = 5, #line width
trace.label = "Altersgruppe")
Young$Exp_Group_Young <- ifelse(Young$Condition %in%
c(1, 2), Young$Condition, NA)
wilcox_test(INTENTION_SUM ~ Exp_Group_Young, data = Young, alternative = "greater", p.adjust.method = "bonferroni")
describeBy(MA_data$AMOTIVATION_SUM, MA_data$AGE_GROUP)
describeBy(MA_data$EXTERNAL_REGULATION_SUM, MA_data$AGE_GROUP)
describeBy(MA_data$INTROJECTED_REGULATION_SUM, MA_data$AGE_GROUP)
describeBy(MA_data$IDENTIFIED_REGUALTION_SUM, MA_data$AGE_GROUP)
describeBy(MA_data$INTEGRATED_REGULATION_SUM, MA_data$AGE_GROUP)
describeBy(MA_data$INTRINSIC_REGULATION_SUM, MA_data$AGE_GROUP)
boxplot(MA_data$AMOTIVATION_SUM ~ MA_data$AGE_GROUP)
boxplot(MA_data$AMOTIVATION_SUM_1_2 ~ MA_data$AGE_GROUP)
boxplot(MA_data$EXTERNAL_REGULATION_SUM ~ MA_data$AGE_GROUP)
boxplot(MA_data$INTROJECTED_REGULATION_SUM ~ MA_data$AGE_GROUP)
boxplot(MA_data$IDENTIFIED_REGUALTION_SUM ~ MA_data$AGE_GROUP)
boxplot(MA_data$INTEGRATED_REGULATION_SUM ~ MA_data$AGE_GROUP)
boxplot(MA_data$INTRINSIC_REGULATION_SUM ~ MA_data$AGE_GROUP)
coin::wilcox_test(MA_data$AMOTIVATION_SUM ~ MA_data$AGE_GROUP, data = MA_data, alternative = "greater", distribution = "exact", correct = FALSE, conf.int = TRUE, p.adjust.method = "bonferroni")
coin::wilcox_test(MA_data$EXTERNAL_REGULATION_SUM ~ MA_data$AGE_GROUP, data = MA_data, alternative = "greater", distribution = "exact", correct = FALSE, conf.int = TRUE, p.adjust.method = "bonferroni")
coin::wilcox_test(MA_data$INTROJECTED_REGULATION_SUM ~ MA_data$AGE_GROUP, data = MA_data, alternative = "less", distribution = "exact", correct = FALSE, conf.int = TRUE, p.adjust.method = "bonferroni")
coin::wilcox_test(MA_data$IDENTIFIED_REGUALTION_SUM ~ MA_data$AGE_GROUP, data = MA_data, alternative = "less", distribution = "exact", correct = FALSE, conf.int = TRUE, p.adjust.method = "bonferroni")
coin::wilcox_test(MA_data$INTEGRATED_REGULATION_SUM ~ MA_data$AGE_GROUP, data = MA_data, alternative = "less", distribution = "exact", correct = FALSE, conf.int = TRUE, p.adjust.method = "bonferroni")
coin::wilcox_test(MA_data$INTRINSIC_REGULATION_SUM ~ MA_data$AGE_GROUP, data = MA_data, alternative = "less", distribution = "exact", correct = FALSE, conf.int = TRUE, p.adjust.method = "bonferroni")
#Effect Size
wilcox_effsize(MA_data, AMOTIVATION_SUM ~ AGE_GROUP, alternative = "greater", mu = 0)
wilcox_effsize(MA_data, EXTERNAL_REGULATION_SUM ~ AGE_GROUP, alternative = "greater", mu = 0)
wilcox_effsize(MA_data, INTROJECTED_REGULATION_SUM ~ AGE_GROUP, alternative = "less", mu = 0)
wilcox_effsize(MA_data, IDENTIFIED_REGUALTION_SUM ~ AGE_GROUP, alternative = "less", mu = 0)
wilcox_effsize(MA_data, INTEGRATED_REGULATION_SUM ~ AGE_GROUP, alternative = "less", mu = 0)
wilcox_effsize(MA_data, INTRINSIC_REGULATION_SUM ~ AGE_GROUP, alternative = "less", mu = 0)
MA_data_tabele_SDT <- MA_data
label(MA_data_tabele_SDT$AMOTIVATION_SUM)       <- "Amotivation"
label(MA_data_tabele_SDT$EXTERNAL_REGULATION_SUM)       <- "Externe Regulation"
label(MA_data_tabele_SDT$INTROJECTED_REGULATION_SUM)     <- "Introjizierte Regulation"
label(MA_data_tabele_SDT$IDENTIFIED_REGUALTION_SUM) <- "Identifizierte Regulation"
label(MA_data_tabele_SDT$INTEGRATED_REGULATION_SUM) <- "Integrierte Regulation"
label(MA_data_tabele_SDT$INTRINSIC_REGULATION_SUM) <- "Intrinsische Motivation"
caption  <- "Deskriptive Daten"
#footnote <- "ᵃ Also known as Breslow thickness"
table1(~ AMOTIVATION_SUM + EXTERNAL_REGULATION_SUM + INTROJECTED_REGULATION_SUM + IDENTIFIED_REGUALTION_SUM + INTEGRATED_REGULATION_SUM + INTRINSIC_REGULATION_SUM | AGE_GROUP, data=MA_data_tabele_SDT, overall=c(left="Total"), caption=caption) #footnote=footnote)
SDTsubset <- MA_data[,c("AMOTIVATION_SUM", "EXTERNAL_REGULATION_SUM", "INTROJECTED_REGULATION_SUM","IDENTIFIED_REGUALTION_SUM", "INTEGRATED_REGULATION_SUM", "INTRINSIC_REGULATION_SUM", "AGE_GROUP")]
data_determinants <- reshape2::melt(SDTsubset,id = "AGE_GROUP")
data_determinants$Determinants <- factor(data_determinants$variable, levels = c("AMOTIVATION_SUM", "EXTERNAL_REGULATION_SUM", "INTROJECTED_REGULATION_SUM","IDENTIFIED_REGUALTION_SUM", "INTEGRATED_REGULATION_SUM", "INTRINSIC_REGULATION_SUM"),
labels = c("Amotivation", "Externe Regulation", "Introjizierte Regulation", "Identifizierte Regulation", "Integrierte Regulation", "Intrinsische Motivation")
)
data_determinants$Determinants <- str_wrap(data_determinants$Determinants, width = 10)
#mean(MA_data$AMOTIVATION_SUM[MA_data$AGE_GROUP == "18-29"])
ggbarplot(
data_determinants,
x = "Determinants",
y = "value",
fill = "AGE_GROUP",
add = c("mean_ci"),
position = position_dodge(0.8),
color = "black",
add.params = list(group = "AGE_GROUP"),
legend = "bottom",
xlab = "",
ylab = "",
ylim = c(0,7),
title = "Motivationsarten der Self-Determination Theory",
subtitle = "Mean and 95% confidence intervals.\n",
font.x = c(10, "plain", "#111111"),
font.y = c(10, "plain", "#111111"),
font.label = c(10, "plain", "#111111"),
font.legend = c(10, "plain", "#111111"),
font.tickslab = c(10, "plain", "#111111"),
font.title = c(12, "bold", "#111111"),
font.subtitle = c(10, "plain", "#111111"),
label = TRUE,
lab.pos = "out",
lab.col = "#eeeeee",
lab.size = 3.6,
lab.vjust = 3.5,
lab.hjust = 0.5,
lab.nb.digits = 2,
orientation = "horiz",
) + scale_fill_manual(
name = "",
labels=c("18-29 Jahre","30-75 Jahre"),
values = c("#00868B","#00688B")
)+ scale_y_continuous(
expand = c(0, 0),
breaks=c(1,2,3,4,5,6,7),
) + coord_cartesian(ylim=c(0,7)) + theme (plot.margin = margin(0, 1, 0, 0, "cm"))
coin::wilcox_test(MA_data$AMOTIVATION_SUM_1_2 ~ MA_data$AGE_GROUP, data = MA_data, alternative = "greater", distribution = "exact", correct = FALSE, conf.int = TRUE, p.adjust.method = "bonferroni")
wilcox_effsize(MA_data, AMOTIVATION_SUM_1_2 ~ AGE_GROUP, alternative = "greater", mu = 0)
coin::wilcox_test(MA_data$IDENTIFIED_REGUALTION_SUM_2_3 ~ MA_data$AGE_GROUP, data = MA_data, alternative = "less", distribution = "exact", correct = FALSE, conf.int = TRUE)
#t.test(MA_data$IDENTIFIED_REGUALTION_SUM_2_3 ~ MA_data$AGE_GROUP)
wilcox_effsize(MA_data, IDENTIFIED_REGUALTION_SUM_2_3 ~ AGE_GROUP, alternative = "less", mu = 0)
cd <- cooks.distance(ANOVA_BENEFIT)
view(cd<4/396)
MA_data_no_outliers[-c(1,22,85,113,175,192,216,231,267,268,273,309,328,330,337,399,400,401,403)]
ANOVA_BENEFIT_NO_OUTLIERS <- aov(INTENTION_SUM ~ Condition + AGE_GROUP + Condition*AGE_GROUP, data = MA_data_no_outliers)
Anova(ANOVA_BENEFIT_NO_OUTLIERS, type=3)
Anova(ANOVA_BENEFIT, type=3)
MA_data_no_outliers < -MA_data_no_outliers[-c(1,22,85,113,175,192,216,231,267,268,273,309,328,330,337,399,400,401,403)]
MA_data_no_outliers <- MA_data_no_outliers[-c(1,22,85,113,175,192,216,231,267,268,273,309,328,330,337,399,400,401,403)]
View(MA_data_no_outliers)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
#plot(pressure)
#load packages
library(psych)
library(expss)
library(plyr)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(reshape2)
library(tidyr)
library(Hmisc)
library(sjPlot)
library(table1)
library(DescTools)
library(moments)
library(corrplot)
library(QuantPsyc)
library(coin)
library(corrr)
library(knitr)
library(kableExtra)
library(tidyverse)
library(apaTables)
library(sandwich)
library(carData)
library(car)
library(Rmisc)
library(boot)
library(rstatix)
library(hrbrthemes)
library(multcompView)
data  <- read.csv("data_project_1013280_2024_04_17.csv", sep = ";")
MA_data <- subset(data, ALTER >= 18 & ALTER <= 75 & ATTENTION_CHECK == 1)
#describe(data)
#table(data$ALTER)
#table(data$ATTENTION_CHECK)
#table(data$ALTER, data$ATTENTION_CHECK != 1)
#head(MA_data)
#unique(MA_data$AGE_GROUP)
#show(MA_data$AGE_GROUP)
MA_data$AGE_GROUP <- NA
MA_data$AGE_GROUP <- factor(
MA_data$AGE_GROUP,
levels = c(1,2),
labels = c("18-29", "30-75")
)
MA_data$AGE_GROUP[which(MA_data$ALTER >= 18 & MA_data$ALTER <=29 )] <- "18-29"
MA_data$AGE_GROUP[which(MA_data$ALTER >= 30 & MA_data$ALTER <= 75 )] <- "30-75"
summary(MA_data$ALTER)
table(MA_data$ALTER<30, MA_data$ALTER>=30)
summary(MA_data$AGE_GROUP)
agegroupwave <- c(
"1" = "18-29",
"2" = "30-75"
)
MA_data$AGE_GROUP_MEDIATION <- 0  # Setze zunächst alle Werte auf 0
MA_data$AGE_GROUP_MEDIATION[which(MA_data$ALTER >= 18 & MA_data$ALTER <= 29)] <- 1  # Setze die entsprechenden Werte auf 1
MA_data$AGE_GROUP_MEDIATION[which(MA_data$ALTER >= 30 & MA_data$ALTER <= 75)] <- 2  # Setze die entsprechenden Werte auf 2
MA_data$AGE_GROUP_MEDIATION <- as.integer(MA_data$AGE_GROUP_MEDIATION)  # Konvertiere die Spalte in Ganzzahlen
MA_data$GENDER_GROUP <- NA
MA_data$GENDER_GROUP <- factor(
MA_data$GENDER_GROUP,
levels = c(1,2,3,4),
labels = c("Weiblich","Männlich","Divers","Keine Angabe")
)
MA_data$GENDER_GROUP[which(MA_data$GESCHLECHT == 1)] <- "Weiblich"
MA_data$GENDER_GROUP[which(MA_data$GESCHLECHT == 2)] <- "Männlich"
MA_data$GENDER_GROUP[which(MA_data$GESCHLECHT == 3)] <- "Divers"
MA_data$GENDER_GROUP[which(MA_data$GESCHLECHT == 4)] <- "Keine Angabe"
summary(MA_data$GENDER_GROUP)
#data$GESCHLECHT <- factor(
#data$GESCHLECHT,
#levels = c(1,2,3,4),
#labels = c("Weiblich", "Männlich","Divers","Keine Angabe")
#)
MA_data$EDUCATION_GROUP <- NA
MA_data$EDUCATION_GROUP <- factor(
MA_data$EDUCATION_GROUP,
levels = c(1,2,3,4,5,6,7),
labels = c("Hauptschulabschluss","Mittlere Reife","Fachhochschulreife","Allgemeine Hochschulreife","Bachelor","Master","Andere")
)
MA_data$EDUCATION_GROUP[which(MA_data$BILDUNG == 1)] <- "Hauptschulabschluss"
MA_data$EDUCATION_GROUP[which(MA_data$BILDUNG == 2)] <- "Mittlere Reife"
MA_data$EDUCATION_GROUP[which(MA_data$BILDUNG == 3)] <- "Fachhochschulreife"
MA_data$EDUCATION_GROUP[which(MA_data$BILDUNG == 4)] <- "Allgemeine Hochschulreife"
MA_data$EDUCATION_GROUP[which(MA_data$BILDUNG == 5)] <- "Bachelor"
MA_data$EDUCATION_GROUP[which(MA_data$BILDUNG == 6)] <- "Master"
MA_data$EDUCATION_GROUP[which(MA_data$BILDUNG == 7)] <- "Andere"
summary(MA_data$EDUCATION_GROUP)
MA_data$COUNTRY_GROUP <- NA
MA_data$COUNTRY_GROUP <- factor(
MA_data$COUNTRY_GROUP,
levels = c(1,2,3,4),
labels = c("Deutschland","Österreich","Schweiz","Andere")
)
MA_data$COUNTRY_GROUP[which(MA_data$LAND == 1)] <- "Deutschland"
MA_data$COUNTRY_GROUP[which(MA_data$LAND == 2)] <- "Österreich"
MA_data$COUNTRY_GROUP[which(MA_data$LAND == 3)] <- "Schweiz"
MA_data$COUNTRY_GROUP[which(MA_data$LAND == 4)] <- "Andere"
summary(MA_data$COUNTRY_GROUP)
MA_data$BDB_GROUP <- NA
MA_data$BDB_GROUP <- factor(
MA_data$BDB_GROUP,
levels = c(1,2,3),
labels = c("Ja","Nein","Keine Angabe")
)
MA_data$BDB_GROUP[which(MA_data$BLUTSPENDEVERHALTEN == 1)] <- "Ja"
MA_data$BDB_GROUP[which(MA_data$BLUTSPENDEVERHALTEN == 2)] <- "Nein"
MA_data$BDB_GROUP[which(MA_data$BLUTSPENDEVERHALTEN == 3)] <- "Keine Angabe"
#table(MA_data$BDB_GROUP)
MA_data$BDO_GROUP <- NA
MA_data$BDO_GROUP <- factor(
MA_data$BDO_GROUP,
levels = c(1,3,4),
labels = c("Deutsches Rotes Kreuz","Weiß ich nicht","Andere")
)
MA_data$BDO_GROUP[which(MA_data$BLUTSPENDEORGANISATION == 1)] <- "Deutsches Rotes Kreuz"
MA_data$BDO_GROUP[which(MA_data$BLUTSPENDEORGANISATION == 3)] <- "Weiß ich nicht"
MA_data$BDO_GROUP[which(MA_data$BLUTSPENDEORGANISATION == 4)] <- "Andere"
#table(MA_data$BDO_GROUP)
MA_data$Condition <- factor(MA_data$c_0001, levels = c(1,2,3))
labels = c("Individueller Anreiz", "Sozialer Anreiz", "Kontrollgruppe")
#table(MA_data$Condition)
#summary(data$c_0001)
#MA_data <- apply_labels(MA_data,
#AGE_GROUP = "Age group",
#GENDER_GROUP = "Gender",
#EDUCATION_GROUP = "Level of education",
#COUNTRY_GROUP = "Residence country")
#html_code <- MA_data %>%
#tab_cells(AGE_GROUP,GENDER_GROUP,EDUCATION_GROUP) %>%
#tab_cols(total(label = "Sum"),Condition) %>%
#tab_stat_cases(total_label = "All") %>%
#tab_pivot() %>%
#htmlTable(align = "c",css.cell = c("width: 400px"))
#this code must be adapted according to the personal file path
#file_path <- "C:\\Users\\timri\\Desktop\\Uni Vorlesungen\\Master GeKo\\Masterarbeit\\Statistiken und Auswertung\\Auswertung"
#file_name <- "Deskriptiv.html"
#writeLines(html_code, file.path("C:\\Users\\timri\\Desktop\\Uni Vorlesungen\\Master GeKo\\Masterarbeit\\Statistiken und Auswertung\\Auswertung", "Deskriptiv.html"))
MA_data_tabele <- MA_data
label(MA_data_tabele$GENDER_GROUP)       <- "Geschlecht"
label(MA_data_tabele$ALTER)       <- "Alter"
label(MA_data_tabele$EDUCATION_GROUP)     <- "Bildung"
label(MA_data_tabele$COUNTRY_GROUP) <- "Land"
label(MA_data_tabele$BDB_GROUP) <- "Blutspendeverhalten"
label(MA_data_tabele$BDO_GROUP) <- "Blutspendeorganisation"
units(MA_data_tabele$ALTER)       <- "Jahre"
caption  <- "Deskriptive Daten"
#footnote <- "ᵃ Also known as Breslow thickness"
table1(~ GENDER_GROUP + ALTER + EDUCATION_GROUP + COUNTRY_GROUP + BDB_GROUP + BDO_GROUP | Condition, data=MA_data_tabele, overall=c(left="Total"), caption=caption) #footnote=footnote)
N <- nrow(MA_data)
ageRange_min <- min(MA_data$ALTER)
ageRange_max <- max(MA_data$ALTER)
ageMean <- mean(MA_data$ALTER)
ageSD <- sd(MA_data$ALTER)
ageMedian <- median(MA_data$ALTER)
table(MA_data$ALTER)
round(table(MA_data$GESCHLECHT)/N*100,2)
round(table(MA_data$BILDUNG)/N*100,2)
describeBy(MA_data$ALTER,MA_data$Condition)
table1(~ ageRange_max + ageRange_min + ageMean + ageSD + ageMedian, data=MA_data_tabele, caption=caption)
p <- MA_data %>%
filter( ALTER<75 ) %>%
ggplot( aes(x=ALTER)) +
geom_histogram( binwidth=1, fill="#00868B", color="#e9ecef", alpha=0.9) +
ggtitle("Altersverteilung") +
theme_ipsum() +
theme(
plot.title = element_text(size=15),
axis.title.x = element_text(hjust = 0.5, vjust = -0.5),
axis.title.y = element_text(hjust = 0.5, vjust = -0.5)
) +
labs(
x = "Alter",
y = "Häufigkeit"
)
p
#table(MA_data$ALTER)
#AMOTIVATION
MA_data$AMOTIVATION_SUM <- (MA_data$AMOTIVATION_1 + MA_data$AMOTIVATION_2 + MA_data$AMOTIVATION_3) / 3
psych::alpha(subset(MA_data, select = c(AMOTIVATION_1,AMOTIVATION_2,AMOTIVATION_3)))
#Crombachs α : .53
psych::alpha(subset(MA_data, select = c(AMOTIVATION_1,AMOTIVATION_2)))
#Crombachs α : .64
MA_data$AMOTIVATION_SUM_1_2 <- (MA_data$AMOTIVATION_1 + MA_data$AMOTIVATION_2) / 2
#psych::alpha(subset(MA_data, select = c(AMOTIVATION_1,AMOTIVATION_3)))
#psych::alpha(subset(MA_data, select = c(AMOTIVATION_2,AMOTIVATION_3)))
#EXTERNAL_REGULATION
MA_data$EXTERNAL_REGULATION_SUM <- (MA_data$EXTERNAL_REGULATION_1 + MA_data$EXTERNAL_REGULATION_2 + MA_data$EXTERNAL_REGULATION_3) / 3
psych::alpha(subset(MA_data, select = c(EXTERNAL_REGULATION_1,EXTERNAL_REGULATION_2,EXTERNAL_REGULATION_2)))
#Crombachs α : .85
#INTROJECTED_REGULATION
MA_data$INTROJECTED_REGULATION_SUM <- (MA_data$INTROJECTED_REGULATION_1 + MA_data$INTROJECTED_REGULATION_2 + MA_data$INTROJECTED_REGULATION_3) / 3
psych::alpha(subset(MA_data, select = c(INTROJECTED_REGULATION_1,INTROJECTED_REGULATION_2,INTROJECTED_REGULATION_3)))
#Crombachs α : .80
#IDENTIFIED_REGUALTION
MA_data$IDENTIFIED_REGUALTION_SUM <- (MA_data$IDENTIFIED_REGUALTION_1 + MA_data$IDENTIFIED_REGUALTION_2 + MA_data$IDENTIFIED_REGUALTION_3) / 3
psych::alpha(subset(MA_data, select = c(IDENTIFIED_REGUALTION_1,IDENTIFIED_REGUALTION_2,IDENTIFIED_REGUALTION_3)))
#Crombachs α : .52
MA_data$IDENTIFIED_REGUALTION_SUM_2_3 <- (MA_data$IDENTIFIED_REGUALTION_2 + MA_data$IDENTIFIED_REGUALTION_3) / 2
psych::alpha(subset(MA_data, select = c(IDENTIFIED_REGUALTION_2,IDENTIFIED_REGUALTION_3)))
#Crombachs α : .65
#INTEGRATED_REGULATION
MA_data$INTEGRATED_REGULATION_SUM <- (MA_data$INTEGRATED_REGULATION_1 + MA_data$INTEGRATED_REGULATION_2 + MA_data$INTEGRATED_REGULATION_3) / 3
psych::alpha(subset(MA_data, select = c(INTEGRATED_REGULATION_1,INTEGRATED_REGULATION_2,INTEGRATED_REGULATION_3)))
#Crombachs α : .81
#INTRINSIC_REGUALTION
MA_data$INTRINSIC_REGULATION_SUM <- (MA_data$INTRINSIC_REGUALTION_1 + MA_data$INTRINSIC_REGUALTION_2 + MA_data$INTRINSIC_REGUALTION_3) / 3
psych::alpha(subset(MA_data, select = c(INTRINSIC_REGUALTION_1,INTRINSIC_REGUALTION_2,INTRINSIC_REGUALTION_3)))
#Crombachs α : .77
MA_data$INTENTION_SUM <- (MA_data$INTENTION_1 + MA_data$INTENTION_2 + MA_data$INTENTION_3) / 3
psych::alpha(subset(MA_data, select = c(INTENTION_1,INTENTION_2,INTENTION_3)))
#Crombachs α : 0.98
library(dplyr)
identify_outliers <- function(data) {
Q1 <- quantile(data$INTENTION_SUM, 0.25)
Q3 <- quantile(data$INTENTION_SUM, 0.75)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
outliers <- data %>%
filter(INTENTION_SUM < lower_bound | INTENTION_SUM > upper_bound)
return(outliers)
}
outliers <- identify_outliers(MA_data)
print(outliers)
MA_data_no_outliers <- MA_data %>%
filter(!(INTENTION_SUM %in% outliers$INTENTION_SUM))
summary(MA_data_no_outliers)
#Cook Distanz test
plot(ANOVA_BENEFIT, 4)
ANOVA_BENEFIT <- aov(INTENTION_SUM ~ Condition + AGE_GROUP + Condition*AGE_GROUP, data = MA_data)
nv <- lm(INTENTION_SUM ~ Condition*AGE_GROUP, data = MA_data)
ANOVA_BENEFIT_ONE_WAY <- oneway.test(INTENTION_SUM ~ Condition + AGE_GROUP + Condition*AGE_GROUP, data = MA_data, var.equal = FALSE)
print(ANOVA_BENEFIT_ONE_WAY)
ggqqplot(residuals(nv))
#plot(ANOVA_BENEFIT, 2)
#Requirement 3: Assumption of a normal distribution can only be partially accepted
library(dplyr)
identify_outliers <- function(data) {
Q1 <- quantile(data$INTENTION_SUM, 0.25)
Q3 <- quantile(data$INTENTION_SUM, 0.75)
IQR <- Q3 - Q1
lower_bound <- Q1 - 1.5 * IQR
upper_bound <- Q3 + 1.5 * IQR
outliers <- data %>%
filter(INTENTION_SUM < lower_bound | INTENTION_SUM > upper_bound)
return(outliers)
}
outliers <- identify_outliers(MA_data)
print(outliers)
MA_data_no_outliers <- MA_data %>%
filter(!(INTENTION_SUM %in% outliers$INTENTION_SUM))
summary(MA_data_no_outliers)
#Cook Distanz test
plot(ANOVA_BENEFIT, 4)
cd <- cooks.distance(ANOVA_BENEFIT)
view(cd<4/396)
# Indizes der Zeilen, die entfernt werden sollen
indices_to_remove <- c(1, 22, 85, 113, 175, 192, 216, 231, 267, 268, 273, 309, 328, 330, 337, 399, 400, 401, 403)
# Entfernen der Zeilen mit den angegebenen Indizes
MA_data_no_outliers <- MA_data_no_outliers[-indices_to_remove, ]
#No observations in the ‘Outliners’ data set. Accordingly, there are no outliers
ANOVA_BENEFIT_NO_OUTLIERS <- aov(INTENTION_SUM ~ Condition + AGE_GROUP + Condition*AGE_GROUP, data = MA_data_no_outliers)
Anova(ANOVA_BENEFIT_NO_OUTLIERS, type=3)
Anova(ANOVA_BENEFIT, type=3)
#boxblot with no outliers
ggboxplot(MA_data_no_outliers, x = "Condition", y = "INTENTION_SUM", fill = "AGE_GROUP", palette = Meine_Palette)
Meine_Palette <- c("#00868B", "#00688B")
#boxplot
ggboxplot(MA_data, x = "Condition", y = "INTENTION_SUM", fill = "AGE_GROUP", palette = Meine_Palette)
#boxblot with no outliers
ggboxplot(MA_data_no_outliers, x = "Condition", y = "INTENTION_SUM", fill = "AGE_GROUP", palette = Meine_Palette)
#Interactionplot
interaction.plot(x.factor = MA_data$Condition, #x-axis variable
trace.factor = MA_data$AGE_GROUP, #variable for lines
response = MA_data$INTENTION_SUM, #y-axis variable
fun = median, #metric to plot
ylab = "Blutspendeintention",
xlab = "Kontroll -und Experimentalgruppen",
col = c("#00868B", "#00688B"),
lty = 1, #line type
lwd = 5, #line width
trace.label = "Altersgruppe")
# Identifizieren der Ausreißer
outlier_indices <- which(MA_data$INTENTION_SUM %in% boxplot.stats(MA_data$INTENTION_SUM)$out)
# Boxplot erstellen
p <- ggboxplot(MA_data,
x = "Condition",
y = "INTENTION_SUM",
fill = "AGE_GROUP",
palette = "jco") +
geom_text(data = MA_data[outlier_indices, ],
aes(x = Condition,
y = INTENTION_SUM,
label = rownames(MA_data[outlier_indices, ])),
vjust = -0.5,
color = "red",
size = 3)
# Plot anzeigen
print(p)
