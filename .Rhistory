#this code must be adapted according to the personal file path
#file_path <- "C:\\Users\\timri\\Desktop\\Uni Vorlesungen\\Master GeKo\\Masterarbeit\\Statistiken und Auswertung\\Auswertung"
#file_name <- "Deskriptiv.html"
#writeLines(html_code, file.path("C:\\Users\\timri\\Desktop\\Uni Vorlesungen\\Master GeKo\\Masterarbeit\\Statistiken und Auswertung\\Auswertung", "Deskriptiv.html"))
MA_data_tabele <- MA_data
label(MA_data_tabele$GENDER_GROUP)       <- "Geschlecht"
label(MA_data_tabele$ALTER)       <- "Alter"
label(MA_data_tabele$EDUCATION_GROUP)     <- "Bildung"
label(MA_data_tabele$COUNTRY_GROUP) <- "Land"
label(MA_data_tabele$BDB_GROUP) <- "Blutspendeverhalten"
label(MA_data_tabele$BDO_GROUP) <- "Blutspendeorganisation"
units(MA_data_tabele$ALTER)       <- "Jahre"
caption  <- "Deskriptive Daten"
#footnote <- "ᵃ Also known as Breslow thickness"
table1(~ GENDER_GROUP + ALTER + EDUCATION_GROUP + COUNTRY_GROUP + BDB_GROUP + BDO_GROUP | Condition, data=MA_data_tabele, overall=c(left="Total"), caption=caption) #footnote=footnote)
N <- nrow(MA_data)
ageRange_min <- min(MA_data$ALTER)
ageRange_max <- max(MA_data$ALTER)
ageMean <- mean(MA_data$ALTER)
ageSD <- sd(MA_data$ALTER)
ageMedian <- median(MA_data$ALTER)
round(table(MA_data$GESCHLECHT)/N*100,2)
round(table(MA_data$BILDUNG)/N*100,2)
describeBy(MA_data$ALTER,MA_data$Condition)
#AMOTIVATION
MA_data$AMOTIVATION_SUM <- (MA_data$AMOTIVATION_1 + MA_data$AMOTIVATION_2 + MA_data$AMOTIVATION_3) / 3
psych::alpha(subset(MA_data, select = c(AMOTIVATION_1,AMOTIVATION_2,AMOTIVATION_3)))
#Crombachs α : 0.53
#EXTERNAL_REGULATION
MA_data$EXTERNAL_REGULATION_SUM <- (MA_data$EXTERNAL_REGULATION_1 + MA_data$EXTERNAL_REGULATION_2 + MA_data$EXTERNAL_REGULATION_3) / 3
psych::alpha(subset(MA_data, select = c(EXTERNAL_REGULATION_1,EXTERNAL_REGULATION_2,EXTERNAL_REGULATION_2)))
#Crombachs α : 0.85
#INTROJECTED_REGULATION
MA_data$INTROJECTED_REGULATION_SUM <- (MA_data$INTROJECTED_REGULATION_1 + MA_data$INTROJECTED_REGULATION_2 + MA_data$INTROJECTED_REGULATION_3) / 3
psych::alpha(subset(MA_data, select = c(INTROJECTED_REGULATION_1,INTROJECTED_REGULATION_2,INTROJECTED_REGULATION_3)))
#Crombachs α : 0.80
#IDENTIFIED_REGUALTION
MA_data$IDENTIFIED_REGUALTION_SUM <- (MA_data$IDENTIFIED_REGUALTION_1 + MA_data$IDENTIFIED_REGUALTION_2 + MA_data$IDENTIFIED_REGUALTION_3) / 3
psych::alpha(subset(MA_data, select = c(IDENTIFIED_REGUALTION_1,IDENTIFIED_REGUALTION_2,IDENTIFIED_REGUALTION_3)))
#Crombachs α : 0.52
#INTEGRATED_REGULATION
MA_data$INTEGRATED_REGULATION_SUM <- (MA_data$INTEGRATED_REGULATION_1 + MA_data$INTEGRATED_REGULATION_2 + MA_data$INTEGRATED_REGULATION_3) / 3
psych::alpha(subset(MA_data, select = c(INTEGRATED_REGULATION_1,INTEGRATED_REGULATION_2,INTEGRATED_REGULATION_3)))
#Crombachs α : 0.81
#INTRINSIC_REGUALTION
MA_data$INTRINSIC_REGUALTION_SUM <- (MA_data$INTRINSIC_REGUALTION_1 + MA_data$INTRINSIC_REGUALTION_2 + MA_data$INTRINSIC_REGUALTION_3) / 3
psych::alpha(subset(MA_data, select = c(INTRINSIC_REGUALTION_1,INTRINSIC_REGUALTION_2,INTRINSIC_REGUALTION_3)))
#Crombachs α : 0.77
MA_data$INTENTION_SUM <- (MA_data$INTENTION_1 + MA_data$INTENTION_2 + MA_data$INTENTION_3) / 3
psych::alpha(subset(MA_data, select = c(INTENTION_1,INTENTION_2,INTENTION_3)))
#Crombachs α : 0.98
#Requirement 1: Metric scaling of the AV : Yes
#Requirement 2: Homogeneity of variances
leveneTest(INTENTION_SUM ~ Condition*AGE_GROUP, data = MA_data)
#The variances are not equal, as p < 0.05. Violation of the homogeneity assumption.
ANOVA_BENEFIT <- aov(INTENTION_SUM ~ Condition + AGE_GROUP + Condition*AGE_GROUP, data = MA_data)
nv <- lm(INTENTION_SUM ~ Condition*AGE_GROUP, data = MA_data)
ANOVA_BENEFIT_ONE_WAY <- oneway.test(INTENTION_SUM ~ Condition + AGE_GROUP + Condition*AGE_GROUP, data = MA_data, var.equal = FALSE)
print(ANOVA_BENEFIT_ONE_WAY)
ggqqplot(residuals(nv))
#plot(ANOVA_BENEFIT, 2)
#Requirement 3: Assumption of a normal distribution can only be partially accepted
#H0 : normal distribution if p > 0.05
Young <- subset(MA_data, MA_data$AGE_GROUP == "18-29")
Old <- subset(MA_data, MA_data$AGE_GROUP == "30-75")
#AMOTIVATION
par(mfrow=c(1,2))
shapiro.test(Young$AMOTIVATION_SUM)
hist(scale(Young$AMOTIVATION_SUM))
shapiro.test(Old$AMOTIVATION_SUM)
hist(scale(Old$AMOTIVATION_SUM))
#EXTERNAL_REGULATION
par(mfrow=c(1,2))
shapiro.test(Young$EXTERNAL_REGULATION_SUM)
hist(scale(Young$EXTERNAL_REGULATION_SUM))
shapiro.test(Old$EXTERNAL_REGULATION_SUM)
hist(scale(Old$EXTERNAL_REGULATION_SUM))
#INTROJECTED_REGULATION
par(mfrow=c(1,2))
shapiro.test(Young$INTROJECTED_REGULATION_SUM)
hist(scale(Young$INTROJECTED_REGULATION_SUM))
shapiro.test(Old$INTROJECTED_REGULATION_SUM)
hist(scale(Old$INTROJECTED_REGULATION_SUM))
#IDENTIFIED_REGUALTION
par(mfrow=c(1,2))
shapiro.test(Young$IDENTIFIED_REGUALTION_SUM)
hist(scale(Young$IDENTIFIED_REGUALTION_SUM))
shapiro.test(Old$IDENTIFIED_REGUALTION_SUM)
hist(scale(Old$IDENTIFIED_REGUALTION_SUM))
#INTEGRATED_REGULATION
par(mfrow=c(1,2))
shapiro.test(Young$INTEGRATED_REGULATION_SUM)
hist(scale(Young$INTEGRATED_REGULATION_SUM))
shapiro.test(Old$INTEGRATED_REGULATION_SUM)
hist(scale(Old$INTEGRATED_REGULATION_SUM))
#INTRINSIC_REGUALTION
par(mfrow=c(1,2))
shapiro.test(Young$INTRINSIC_REGUALTION_SUM)
hist(scale(Young$INTRINSIC_REGUALTION_SUM))
shapiro.test(Old$INTRINSIC_REGUALTION_SUM)
hist(scale(Old$INTRINSIC_REGUALTION_SUM))
#equality of variances
LeveneTest(MA_data$AMOTIVATION_SUM, MA_data$Condition)
LeveneTest(MA_data$EXTERNAL_REGULATION_SUM, MA_data$AGE_GROUP)
LeveneTest(MA_data$INTROJECTED_REGULATION_SUM, MA_data$AGE_GROUP)
LeveneTest(MA_data$IDENTIFIED_REGUALTION_SUM, MA_data$AGE_GROUP)
LeveneTest(MA_data$INTEGRATED_REGULATION_SUM, MA_data$AGE_GROUP)
LeveneTest(MA_data$INTRINSIC_REGUALTION_SUM, MA_data$AGE_GROUP)
#equal variance is given
#Since there is no homogeneity of variance, the standard errors must be calculated "robustly". This function ensures that the ANOVA is less susceptible to unequal variances
summary(ANOVA_BENEFIT, robust = TRUE)
Anova(ANOVA_BENEFIT, type=3)
#boxplot(INTENTION_SUM ~ AGE_GROUP, col = c("blue", "green"), data=MA_data)
#ggboxplot(MA_data, x= "INTENTION_SUM", y = "AGE_GROUP", color = "green")
Meine_Palette <- c("#00868B", "#00688B")
#boxplot
ggboxplot(MA_data, x = "Condition", y = "INTENTION_SUM", fill = "AGE_GROUP", palette = Meine_Palette)
#Interactionplot
interaction.plot(x.factor = MA_data$Condition, #x-axis variable
trace.factor = MA_data$AGE_GROUP, #variable for lines
response = MA_data$INTENTION_SUM, #y-axis variable
fun = median, #metric to plot
ylab = "Intention",
xlab = "Condition",
col = c("#00868B", "#00688B"),
lty = 1, #line type
lwd = 5, #line width
trace.label = "Alters Gruppe")
describeBy(MA_data$AMOTIVATION_SUM, MA_data$AGE_GROUP)
describeBy(MA_data$EXTERNAL_REGULATION_SUM, MA_data$AGE_GROUP)
describeBy(MA_data$INTROJECTED_REGULATION_SUM, MA_data$AGE_GROUP)
describeBy(MA_data$IDENTIFIED_REGUALTION_SUM, MA_data$AGE_GROUP)
describeBy(MA_data$INTEGRATED_REGULATION_SUM, MA_data$AGE_GROUP)
describeBy(MA_data$INTRINSIC_REGUALTION_SUM, MA_data$AGE_GROUP)
boxplot(MA_data$AMOTIVATION_SUM ~ MA_data$AGE_GROUP)
boxplot(MA_data$EXTERNAL_REGULATION_SUM ~ MA_data$AGE_GROUP)
boxplot(MA_data$INTROJECTED_REGULATION_SUM ~ MA_data$AGE_GROUP)
boxplot(MA_data$IDENTIFIED_REGUALTION_SUM ~ MA_data$AGE_GROUP)
boxplot(MA_data$INTEGRATED_REGULATION_SUM ~ MA_data$AGE_GROUP)
boxplot(MA_data$INTRINSIC_REGUALTION_SUM ~ MA_data$AGE_GROUP)
coin::wilcox_test(MA_data$AMOTIVATION_SUM ~ MA_data$AGE_GROUP, data = MA_data, alternative = "greater", distribution = "exact", correct = FALSE, conf.int = TRUE)
coin::wilcox_test(MA_data$EXTERNAL_REGULATION_SUM ~ MA_data$AGE_GROUP, data = MA_data, alternative = "greater", distribution = "exact", correct = FALSE, conf.int = TRUE)
coin::wilcox_test(MA_data$INTROJECTED_REGULATION_SUM ~ MA_data$AGE_GROUP, data = MA_data, alternative = "less", distribution = "exact", correct = FALSE, conf.int = TRUE)
coin::wilcox_test(MA_data$IDENTIFIED_REGUALTION_SUM ~ MA_data$AGE_GROUP, data = MA_data, alternative = "less", distribution = "exact", correct = FALSE, conf.int = TRUE)
coin::wilcox_test(MA_data$INTEGRATED_REGULATION_SUM ~ MA_data$AGE_GROUP, data = MA_data, alternative = "less", distribution = "exact", correct = FALSE, conf.int = TRUE)
coin::wilcox_test(MA_data$INTRINSIC_REGUALTION_SUM ~ MA_data$AGE_GROUP, data = MA_data, alternative = "less", distribution = "exact", correct = FALSE, conf.int = TRUE)
#Effect Size
wilcox_effsize(MA_data, AMOTIVATION_SUM ~ AGE_GROUP, alternative = "greater", mu = 0)
wilcox_effsize(MA_data, EXTERNAL_REGULATION_SUM ~ AGE_GROUP, alternative = "greater", mu = 0)
wilcox_effsize(MA_data, INTROJECTED_REGULATION_SUM ~ AGE_GROUP, alternative = "less", mu = 0)
wilcox_effsize(MA_data, IDENTIFIED_REGUALTION_SUM ~ AGE_GROUP, alternative = "less", mu = 0)
wilcox_effsize(MA_data, INTEGRATED_REGULATION_SUM ~ AGE_GROUP, alternative = "less", mu = 0)
wilcox_effsize(MA_data, INTRINSIC_REGUALTION_SUM ~ AGE_GROUP, alternative = "less", mu = 0)
SDTsubset <- MA_data[,c("AMOTIVATION_SUM", "EXTERNAL_REGULATION_SUM", "INTROJECTED_REGULATION_SUM","IDENTIFIED_REGUALTION_SUM", "INTEGRATED_REGULATION_SUM", "INTRINSIC_REGUALTION_SUM", "AGE_GROUP")]
SDTsubset <- MA_data[,c("AMOTIVATION_SUM", "EXTERNAL_REGULATION_SUM", "INTROJECTED_REGULATION_SUM","IDENTIFIED_REGUALTION_SUM", "INTEGRATED_REGULATION_SUM", "INTRINSIC_REGUALTION_SUM", "AGE_GROUP")]
data_determinants <- reshape2::melt(SDTsubset,id = "AGE_GROUP")
data_determinants$Determinants <- factor(data_determinants$variable, levels = c("AMOTIVATION_SUM", "EXTERNAL_REGULATION_SUM", "INTROJECTED_REGULATION_SUM","IDENTIFIED_REGUALTION_SUM", "INTEGRATED_REGULATION_SUM", "INTRINSIC_REGUALTION_SUM"),
labels = c("Amotivation", "Externale Regulation", "Introjezierte Regulation", "Identifizierte Regulation", "Integrierte Regulation", "Intrinsische Motivation")
)
ggbarplot(
data_determinants,
x = "Determinants",
y = "value",
fill = "AGE_GROUP",
add = c("mean_ci"),
position = position_dodge(0.8),
color = "black",
add.params = list(group = "Condition"),
legend = "bottom",
xlab = "",
ylab = "",
ylim = c(0,7),
title = "Determinants of the Theory of Planned Behavior\n seperated by experimental condition",
subtitle = "Mean and 95% confidence intervals.\n",
font.x = c(10, "plain", "#111111"),
font.y = c(10, "plain", "#111111"),
font.label = c(10, "plain", "#111111"),
font.legend = c(10, "plain", "#111111"),
font.tickslab = c(10, "plain", "#111111"),
font.title = c(12, "bold", "#111111"),
font.subtitle = c(10, "plain", "#111111"),
label = TRUE,
lab.pos = "out",
lab.col = "#eeeeee",
lab.size = 3.6,
lab.vjust = 3.5,
lab.hjust = 0.5,
lab.nb.digits = 2,
orientation = "horiz"
) + scale_fill_manual(
name = "",
labels=c("No One Health input","One Health input"),
values = c("#9ab5c1","#3B4F69")
)+ scale_y_continuous(
expand = c(0, 0),
breaks=c(1,2,3,4,5,6,7),
) + coord_cartesian(ylim=c(0,7)) + theme (plot.margin = margin(0, 1, 0, 0, "cm"))
ggbarplot(
data_determinants,
x = "Determinants",
y = "value",
fill = "AGE_GROUP",
add = c("mean_ci"),
position = position_dodge(0.8),
color = "black",
add.params = list(group = "AGE_GROUP"),
legend = "bottom",
xlab = "",
ylab = "",
ylim = c(0,7),
title = "Determinants of the Theory of Planned Behavior\n seperated by experimental condition",
subtitle = "Mean and 95% confidence intervals.\n",
font.x = c(10, "plain", "#111111"),
font.y = c(10, "plain", "#111111"),
font.label = c(10, "plain", "#111111"),
font.legend = c(10, "plain", "#111111"),
font.tickslab = c(10, "plain", "#111111"),
font.title = c(12, "bold", "#111111"),
font.subtitle = c(10, "plain", "#111111"),
label = TRUE,
lab.pos = "out",
lab.col = "#eeeeee",
lab.size = 3.6,
lab.vjust = 3.5,
lab.hjust = 0.5,
lab.nb.digits = 2,
orientation = "horiz"
) + scale_fill_manual(
name = "",
labels=c("No One Health input","One Health input"),
values = c("#9ab5c1","#3B4F69")
)+ scale_y_continuous(
expand = c(0, 0),
breaks=c(1,2,3,4,5,6,7),
) + coord_cartesian(ylim=c(0,7)) + theme (plot.margin = margin(0, 1, 0, 0, "cm"))
ggbarplot(
data_determinants,
x = "Determinants",
y = "value",
fill = "AGE_GROUP",
add = c("mean_ci"),
position = position_dodge(0.8),
color = "black",
add.params = list(group = "AGE_GROUP"),
legend = "bottom",
xlab = "",
ylab = "",
ylim = c(0,7),
title = "Motivationsarten der Self-Determination Theory",
subtitle = "Mean and 95% confidence intervals.\n",
font.x = c(10, "plain", "#111111"),
font.y = c(10, "plain", "#111111"),
font.label = c(10, "plain", "#111111"),
font.legend = c(10, "plain", "#111111"),
font.tickslab = c(10, "plain", "#111111"),
font.title = c(12, "bold", "#111111"),
font.subtitle = c(10, "plain", "#111111"),
label = TRUE,
lab.pos = "out",
lab.col = "#eeeeee",
lab.size = 3.6,
lab.vjust = 3.5,
lab.hjust = 0.5,
lab.nb.digits = 2,
orientation = "horiz"
) + scale_fill_manual(
name = "",
labels=c("18-29 Jahre","30-75 Jahre"),
values = c("#00868B","#00688B")
)+ scale_y_continuous(
expand = c(0, 0),
breaks=c(1,2,3,4,5,6,7),
) + coord_cartesian(ylim=c(0,7)) + theme (plot.margin = margin(0, 1, 0, 0, "cm"))
mean(MA_data$AMOTIVATION_SUM[MA_data$AGE_GROUP == 18-29])
mean(MA_data$AMOTIVATION_SUM[MA_data$AGE_GROUP == "18-29"])
ggbarplot(
data_determinants,
x = "Determinants",
y = "value",
fill = "AGE_GROUP",
add = c("mean_ci"),
position = position_dodge(0.8),
color = "black",
add.params = list(group = "AGE_GROUP"),
legend = "bottom",
xlab = "",
ylab = "",
ylim = c(0,7),
title = "Motivationsarten der Self-Determination Theory",
subtitle = "Mean and 95% confidence intervals.\n",
font.x = c(10, "plain", "#111111"),
font.y = c(10, "plain", "#111111"),
font.label = c(10, "plain", "#111111"),
font.legend = c(10, "plain", "#111111"),
font.tickslab = c(10, "plain", "#111111"),
font.title = c(12, "bold", "#111111"),
font.subtitle = c(10, "plain", "#111111"),
label = TRUE,
lab.pos = "out",
lab.col = "#eeeeee",
lab.size = 3.6,
lab.vjust = 3.5,
lab.hjust = 0.5,
lab.nb.digits = 2,
orientation = "horiz"
) + scale_fill_manual(
name = "",
labels=c("18-29 Jahre","30-75 Jahre"),
values = c("#00868B","#00688B")
)+ scale_y_continuous(
expand = c(0, 0),
breaks=c(1,2,3,4,5,6,7),
) + coord_cartesian(ylim=c(0,7)) + theme (plot.margin = margin(0, 1, 0, 0, "cm"))
ggbarplot(
data_determinants,
x = "Determinants",
y = "value",
fill = "AGE_GROUP",
add = c("mean_ci"),
position = position_dodge(0.8),
color = "black",
add.params = list(group = "AGE_GROUP"),
legend = "bottom",
xlab = "",
ylab = "",
ylim = c(0,7),
title = "Motivationsarten der Self-Determination Theory",
subtitle = "Mittelwerte und 95% Konfidenzintervalle.\n",
font.x = c(10, "plain", "#111111"),
font.y = c(10, "plain", "#111111"),
font.label = c(10, "plain", "#111111"),
font.legend = c(10, "plain", "#111111"),
font.tickslab = c(10, "plain", "#111111"),
font.title = c(12, "bold", "#111111"),
font.subtitle = c(10, "plain", "#111111"),
label = TRUE,
lab.pos = "out",
lab.col = "#eeeeee",
lab.size = 3.6,
lab.vjust = 3.5,
lab.hjust = 0.5,
lab.nb.digits = 2,
orientation = "horiz"
) + scale_fill_manual(
name = "",
labels=c("18-29 Jahre","30-75 Jahre"),
values = c("#00868B","#00688B")
)+ scale_y_continuous(
expand = c(0, 0),
breaks=c(1,2,3,4,5,6,7),
) + coord_cartesian(ylim=c(0,7)) + theme (plot.margin = margin(0, 1, 0, 0, "cm"))
mean(MA_data$AMOTIVATION_SUM[MA_data$AGE_GROUP == "18-29"])
mean(MA_data$AMOTIVATION_SUM[MA_data$AGE_GROUP == "30-75"])
mean(MA_data$INTRINSIC_REGUALTION_SUM[MA_data$AGE_GROUP == "18-29"])
ggbarplot(
data_determinants,
x = "Determinants",
y = "value",
fill = "AGE_GROUP",
add = c("mean_ci"),
position = position_dodge(0.8),
color = "black",
add.params = list(group = "AGE_GROUP"),
legend = "bottom",
xlab = "",
ylab = "",
ylim = c(0,7),
title = "Motivationsarten der Self-Determination Theory",
subtitle = "Mittelwerte und 95% Konfidenzintervalle.\n",
font.x = c(10, "plain", "#111111"),
font.y = c(10, "plain", "#111111"),
font.label = c(10, "plain", "#111111"),
font.legend = c(10, "plain", "#111111"),
font.tickslab = c(10, "plain", "#111111"),
font.title = c(12, "bold", "#111111"),
font.subtitle = c(10, "plain", "#111111"),
label = TRUE,
lab.pos = "out",
lab.col = "#eeeeee",
lab.size = 3.6,
lab.vjust = 3.5,
lab.hjust = 0.5,
lab.nb.digits = 2,
orientation = "horiz"
) + scale_fill_manual(
name = "",
labels=c("18-29 Jahre","30-75 Jahre"),
values = c("#00868B","#00688B")
)+ scale_y_continuous(
expand = c(0, 0),
breaks=c(1,2,3,4,5,6,7),
) + coord_cartesian(ylim=c(0,7)) + theme (plot.margin = margin(0, 1, 0, 0, "cm"))
ggbarplot(
data_determinants,
x = "Determinants",
y = "value",
fill = "AGE_GROUP",
add = c("mean_ci"),
position = position_dodge(0.8),
color = "black",
add.params = list(group = "AGE_GROUP"),
legend = "bottom",
xlab = "",
ylab = "",
ylim = c(0,7),
title = "Motivationsarten der Self-Determination Theory",
subtitle = "Mittelwerte und 95% Konfidenzintervalle.\n",
font.x = c(10, "plain", "#111111"),
font.y = c(10, "plain", "#111111"),
font.label = c(10, "plain", "#111111"),
font.legend = c(10, "plain", "#111111"),
font.tickslab = c(10, "plain", "#111111"),
font.title = c(12, "bold", "#111111"),
font.subtitle = c(10, "plain", "#111111"),
label = TRUE,
lab.pos = "out",
lab.col = "#eeeeee",
lab.size = 3.6,
lab.vjust = 3.5,
lab.hjust = 0.5,
lab.nb.digits = 2,
orientation = "horiz"
) + scale_fill_manual(
name = "",
labels=c("18-29 Jahre","30-75 Jahre"),
values = c("#00868B","#00688B")
)+ scale_y_continuous(
expand = c(0, 0),
breaks=c(1,2,3,4,5,6,7),
) + coord_cartesian(ylim=c(0,7)) + theme (plot.margin = margin(0, 1, 0, 0, "cm"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)                                )
ggbarplot(
data_determinants,
x = "Determinants",
y = "value",
fill = "AGE_GROUP",
add = c("mean_ci"),
position = position_dodge(0.8),
color = "black",
add.params = list(group = "AGE_GROUP"),
legend = "bottom",
xlab = "",
ylab = "",
ylim = c(0,7),
title = "Motivationsarten der Self-Determination Theory",
subtitle = "Mittelwerte und 95% Konfidenzintervalle.\n",
font.x = c(10, "plain", "#111111"),
font.y = c(10, "plain", "#111111"),
font.label = c(10, "plain", "#111111"),
font.legend = c(10, "plain", "#111111"),
font.tickslab = c(10, "plain", "#111111"),
font.title = c(12, "bold", "#111111"),
font.subtitle = c(10, "plain", "#111111"),
label = TRUE,
lab.pos = "out",
lab.col = "#eeeeee",
lab.size = 3.6,
lab.vjust = 3.5,
lab.hjust = 0.5,
lab.nb.digits = 2,
orientation = "horiz",
lab = function(x) str_wrap(x, width = 10) # Umbrechen der Beschriftungen bei mehr als 10 Zeichen
) + scale_fill_manual(
name = "",
labels=c("18-29 Jahre","30-75 Jahre"),
values = c("#00868B","#00688B")
) + scale_y_continuous(
expand = c(0, 0),
breaks=c(1,2,3,4,5,6,7)
) + coord_cartesian(ylim=c(0,7)) + theme(
plot.margin = margin(0, 1, 0, 0, "cm"),
axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
)
ggbarplot(
data_determinants,
x = "Determinants",
y = "value",
fill = "AGE_GROUP",
add = c("mean_ci"),
position = position_dodge(0.8),
color = "black",
add.params = list(group = "AGE_GROUP"),
legend = "bottom",
xlab = "",
ylab = "",
ylim = c(0,7),
title = "Motivationsarten der Self-Determination Theory",
subtitle = "Mittelwerte und 95% Konfidenzintervalle.\n",
font.x = c(10, "plain", "#111111"),
font.y = c(10, "plain", "#111111"),
font.label = c(10, "plain", "#111111"),
font.legend = c(10, "plain", "#111111"),
font.tickslab = c(10, "plain", "#111111"),
font.title = c(12, "bold", "#111111"),
font.subtitle = c(10, "plain", "#111111"),
label = TRUE,
lab.pos = "out",
lab.col = "#eeeeee",
lab.size = 3.6,
lab.vjust = 3.5,
lab.hjust = 0.5,
lab.nb.digits = 2,
orientation = "horiz",
lab = function(x) str_wrap(x, width = 10)
) + scale_fill_manual(
name = "",
labels=c("18-29 Jahre","30-75 Jahre"),
values = c("#00868B","#00688B")
)+ scale_y_continuous(
expand = c(0, 0),
breaks=c(1,2,3,4,5,6,7),
) + coord_cartesian(ylim=c(0,7)) + theme (plot.margin = margin(0, 1, 0, 0, "cm"))                               )
